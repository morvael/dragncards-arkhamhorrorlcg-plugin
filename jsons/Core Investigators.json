{
    "actionLists": {
        "eliminateInvestigator": [
            ["COND",
                ["CAN_ELIMINATE_INVESTIGATOR", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "other reasons", "$PLAYER_N"],
                ["PROMPT", "$PLAYER_N", "eliminateInvestigator", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID"],
                ["TRUE"],
                ["LOG", "└── You cannot eliminate {{$ACTIVE_FACE.name}}, {{$ALIAS_N}}."]
            ]
        ],
        "investigatorTurn": [
            ["COND",
                ["EQUAL", "$GAME.arkhamActiveInvestigator", null],
                ["ACTION_LIST", "investigatorStartTurn"],
                ["TRUE"],
                ["ACTION_LIST", "investigatorEndTurn"]
            ]
        ],
        "investigatorStartTurn": [
            ["COND",
                ["CAN_START_INVESTIGATOR_TURN", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "$PLAYER_N"],
                ["DO_START_INVESTIGATOR_TURN", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot start {{$ACTIVE_FACE.name}}'s turn, {{$ALIAS_N}}."]
            ]
        ],
        "investigatorEndTurn": [
            ["COND",
                ["AND",
                    ["CAN_END_INVESTIGATOR_TURN", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", true, "$PLAYER_N"],
                    ["OR",
                        ["EQUAL", "$GAME.stepId", "I2"],
                        ["EQUAL", "$GAME.stepId", "W3"],
                        ["EQUAL", "$GAME.stepId", "I2.1"]
                    ]
                ],
                ["DO_END_INVESTIGATOR_TURN", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", true, true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot end {{$ACTIVE_FACE.name}}'s turn, {{$ALIAS_N}}."]
            ]
        ],
        "calculateWillpower": [
            ["COND",
                ["CAN_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "willpower", "skillWillpower", "$PLAYER_N"],
                ["DO_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "willpower", "skillWillpower", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot calculate {{$ACTIVE_FACE.name}}'s willpower, {{$ALIAS_N}}."]
            ]
        ],
        "calculateIntellect": [
            ["COND",
                ["CAN_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "intellect", "skillIntellect", "$PLAYER_N"],
                ["DO_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "intellect", "skillIntellect", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot calculate {{$ACTIVE_FACE.name}}'s intellect, {{$ALIAS_N}}."]
            ]
        ],
        "calculateCombat": [
            ["COND",
                ["CAN_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "combat", "skillCombat", "$PLAYER_N"],
                ["DO_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "combat", "skillCombat", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot calculate {{$ACTIVE_FACE.name}}'s combat, {{$ALIAS_N}}."]
            ]
        ],
        "calculateAgility": [
            ["COND",
                ["CAN_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "agility", "skillAgility", "$PLAYER_N"],
                ["DO_CALCULATE_SKILL", "$ACTIVE_CARD.cardOwner", "$ACTIVE_CARD_ID", "agility", "skillAgility", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot calculate {{$ACTIVE_FACE.name}}'s agility, {{$ALIAS_N}}."]
            ]
        ]
    },
    "functions": {
        "GET_LEAD_INVESTIGATOR_TOKEN": {
            "_comment": "Returns FirstInvestigatorToken type card, or null.",
            "args": [],
            "code": [
                ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.currentFace.type", "FirstInvestigatorToken"]]
            ]
        },
        "GET_INVESTIGATOR": {
            "_comment": "Returns Investigator type card owned by given player and located in the correct Investigator group, or null.",
            "args": ["$TARGET_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "GET_INVESTIGATOR.TARGET_PLAYER"],
                ["ONE_CARD", "$CARD", ["AND",
                    ["EQUAL", "$CARD.cardOwner", "$TARGET_PLAYER"],
                    ["EQUAL", "$CARD.currentFace.type", "Investigator"],
                    ["EQUAL", "$CARD.groupId", ["GET_CONTROLLER_INVESTIGATOR", "$TARGET_PLAYER"]]
                ]]
            ]
        },
        "GET_MINI_INVESTIGATOR": {
            "_comment": "Returns MiniInvestigator type card owned by given player, or null.",
            "args": ["$TARGET_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "GET_MINI_INVESTIGATOR.TARGET_PLAYER"],
                ["ONE_CARD", "$CARD", ["AND",
                    ["EQUAL", "$CARD.cardOwner", "$TARGET_PLAYER"],
                    ["EQUAL", "$CARD.currentFace.type", "MiniInvestigator"]
                ]]
            ]
        },
        "GET_PLAYER_ELIMINATED": {
            "_comment": "Returns true when given player has no owned Investigator card or it is marked as eliminated.",
            "args": ["$TARGET_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "GET_PLAYER_ELIMINATED.TARGET_PLAYER"],
                ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$TARGET_PLAYER"]],
                ["OR",
                    ["EQUAL", "$INVESTIGATOR", null],
                    ["EQUAL", "$INVESTIGATOR.eliminated", true]
                ]
            ]
        },
        "CAN_ELIMINATE_INVESTIGATOR": {
            "_comment": "Returns true given card is an Investigator card not marked as eliminated, and located in an *Investigator group.",
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$REASON", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "CAN_ELIMINATE_INVESTIGATOR.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "CAN_ELIMINATE_INVESTIGATOR.TARGET_CARD_ID"]],
                ["VALIDATE_NOT_EMPTY", "$REASON", "CAN_ELIMINATE_INVESTIGATOR.REASON"],
                ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                ["AND",
                    ["EQUAL", "$GAME.arkhamScenarioInit", false],
                    ["EQUAL", "$TARGET_CARD.currentFace.type", "Investigator"],
                    ["NOT_EQUAL", "$TARGET_CARD.eliminated", true],
                    ["NOT_EQUAL", "$MINI_INVESTIGATOR", null]
                ]
            ]
        },
        "DO_ELIMINATE_INVESTIGATOR": {
            "_comment": "First phase of Investigator's elimination.",
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$REASON", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_ELIMINATE_INVESTIGATOR.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_ELIMINATE_INVESTIGATOR.TARGET_CARD_ID"]],
                ["VALIDATE_NOT_EMPTY", "$REASON", "DO_ELIMINATE_INVESTIGATOR.REASON"],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_ELIMINATE_INVESTIGATOR.LOG_EVENT"],
                ["COND",
                    ["CAN_ELIMINATE_INVESTIGATOR", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$REASON", "$ACTOR_PLAYER"],
                    [
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "eliminate {{$TARGET_CARD.currentFace.name}} due to {{$REASON}}.", "eliminates {{$TARGET_CARD.currentFace.name}} due to {{$REASON}}."],
                        ["COND",
                            ["EQUAL", "$GAME.firstPlayer", "$TARGET_CARD.cardOwner"],
                            [
                                ["VAR", "$POSSIBLE_LEADS", ["LIST"]],
                                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                                    ["COND",
                                        ["AND",
                                            ["NOT_EQUAL", "$PLAYER_I", "$GAME.firstPlayer"],
                                            ["NOT_EQUAL", ["GET_PLAYER_ELIMINATED", "$PLAYER_I"], true]
                                        ],
                                        ["UPDATE_VAR", "$POSSIBLE_LEADS", ["APPEND", "$POSSIBLE_LEADS", "$PLAYER_I"]]
                                    ]
                                ]],
                                ["COND",
                                    ["GREATER_THAN", ["LENGTH", "$POSSIBLE_LEADS"], 1],
                                    [
                                        ["PROMPT", "$GAME.firstPlayer", "chooseNewLeadInvestigator"],
                                        ["FOR_EACH_VAL", "$PLAYER_I", "$POSSIBLE_LEADS", [
                                            ["VAR", "$ALIAS_I", ["GET_ALIAS", "$PLAYER_I"]],
                                            ["VAR", "$LETTER", ["SUBSTRING", "$PLAYER_I", 6, 1]],
                                            ["PROMPT_ADD_OPTION", "$GAME.firstPlayer", "$ALIAS_I", "{{$LETTER}}", ["LIST", "DO_ELIMINATE_INVESTIGATOR_FINAL", "{{$TARGET_CARD_ID}}", "{{$PLAYER_I}}"]]
                                        ]]
                                    ],
                                    ["EQUAL", ["LENGTH", "$POSSIBLE_LEADS"], 1],
                                    ["DO_ELIMINATE_INVESTIGATOR_FINAL", "$TARGET_CARD_ID", "$POSSIBLE_LEADS.[0]"],
                                    ["TRUE"],
                                    [
                                        ["LOG", "└── Scenario ends, as there are no remaining players!"],
                                        ["DO_ELIMINATE_INVESTIGATOR_FINAL", "$TARGET_CARD_ID", null]
                                    ]
                                ]
                            ],
                            ["TRUE"],
                            ["DO_ELIMINATE_INVESTIGATOR_FINAL", "$TARGET_CARD_ID", "$GAME.firstPlayer"]
                        ]
                    ]
                ]
            ]
        },
        "DO_ELIMINATE_INVESTIGATOR_FINAL": {
            "_comment": "Final phase of Investigator's elimination.",
            "args": ["$TARGET_CARD_ID", "$LEAD_PLAYER"],
            "code": [
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_ELIMINATE_INVESTIGATOR_FINAL.TARGET_CARD_ID"]],
                ["VAR", "$TARGET_PLAYER", "$TARGET_CARD.cardOwner"],
                ["COND",
                    ["EQUAL", "$LEAD_PLAYER", null],
                    [
                        ["VAR", "$TARGET_PLAYER_ALIAS", ["GET_ALIAS", "$TARGET_PLAYER"]],
                        ["VAR", "$LEAD_INVESTIGATOR_TOKEN", ["GET_LEAD_INVESTIGATOR_TOKEN"]],
                        ["COND",
                            ["AND",
                                ["NOT_EQUAL", "$LEAD_INVESTIGATOR_TOKEN", null],
                                ["EQUAL", "$LEAD_INVESTIGATOR_TOKEN.parentCardId", "$TARGET_CARD_ID"]
                            ],
                            [
                                ["LOG", "└── {{$TARGET_PLAYER_ALIAS}} moves {{$LEAD_INVESTIGATOR_TOKEN.currentFace.name}} to {{$GROUP_BY_ID.sharedTokens.label}}."],
                                ["MOVE_CARD", "$LEAD_INVESTIGATOR_TOKEN.id", "sharedTokens", -1]
                            ]
                        ]
                    ],
                    ["NOT_EQUAL", "$LEAD_PLAYER", "$GAME.firstPlayer"],
                    [
                        ["VAR", "$LEAD_PLAYER_ALIAS", ["GET_ALIAS", "$LEAD_PLAYER"]],
                        ["VAR", "$LEAD_INVESTIGATOR", ["GET_INVESTIGATOR", "$LEAD_PLAYER"]],
                        ["LOG", "└── {{$LEAD_PLAYER_ALIAS}}'s {{$LEAD_INVESTIGATOR.currentFace.name}} is the new lead investigator."],
                        ["SET", "/firstPlayer", "$LEAD_PLAYER"]
                    ]
                ],
                ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$TARGET_PLAYER"]],
                ["COND",
                    ["EQUAL", "$TARGET_PLAYER", "$GAME.arkhamActiveInvestigator"],
                    ["DO_END_INVESTIGATOR_TURN", "$TARGET_PLAYER", "$MINI_INVESTIGATOR.id", false, false, null]
                ],
                ["SET", "/cardById/$TARGET_CARD_ID/tokens/resource", 0],
                ["COND",
                    ["GREATER_THAN", "$CARD_BY_ID.$TARGET_CARD_ID.tokens.clue", 0],
                    ["LOG", "└── Place all {{$CARD_BY_ID.$TARGET_CARD_ID.currentFace.name}}'s clues at the location they are at."]
                ],
                ["SET", "/cardById/$TARGET_CARD_ID/tokens/doom", 0],
                ["SET", "/cardById/$TARGET_CARD_ID/tokens/damage", 0],
                ["SET", "/cardById/$TARGET_CARD_ID/tokens/horror", 0],
                ["SET", "/cardById/$TARGET_CARD_ID/tokens/freeze", 0],
                ["SET", "/cardById/$TARGET_CARD_ID/currentSide", "B"],
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.controller", "$TARGET_PLAYER"],
                    ["EQUAL", "$CARD.inAdvanced", true],
                    ["EQUAL", "$CARD.sides.B.databaseId", null],
                    ["EQUAL", "$CARD.sides.B.name", "Player Card"],
                    ["EQUAL", "$CARD.cardIndex", 0],
                    ["GREATER_THAN", ["GET_ATTACHED_CARDS_COUNT", "$CARD.id"], 0]
                ]]],
                ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                    ["DO_FORCE_DISCARD_ALL_ATTACHED_CARDS", "$TARGET_PLAYER", "$CARD.id", false, null]
                ]],
                ["VAR", "$THREAT_ID", ["GET_CONTROLLER_THREAT", "$TARGET_PLAYER"]],
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "$THREAT_ID"],
                    ["NOT_EQUAL", "$CARD.currentFace.type", "Enemy"]
                ]]],
                ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                    ["DO_DISCARD_CARD", "$TARGET_PLAYER", "$CARD.id", false, null]
                ]],
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "$THREAT_ID"],
                    ["EQUAL", "$CARD.currentFace.type", "Enemy"]
                ]]],
                ["COND",
                    ["GREATER_THAN", ["LENGTH", "$SELECTED_CARDS"], 0],
                    ["LOG", "└── Place all {{$CARD_BY_ID.$TARGET_CARD_ID.currentFace.name}}'s enemies from their threat area at the location they are at."]
                ],
                ["VAR", "$ASIDE_ID", ["GET_CONTROLLER_ASIDE", "$TARGET_PLAYER"]],
                ["VAR", "$REMOVED_ID", ["GET_CONTROLLER_REMOVED", "$TARGET_PLAYER"]],
                ["VAR", "$EXILED_ID", ["GET_CONTROLLER_EXILED", "$TARGET_PLAYER"]],
                ["VAR", "$SIDE_DECK_ID", ["GET_CONTROLLER_SIDE_DECK", "$TARGET_PLAYER"]],
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.controller", "$TARGET_PLAYER"],
                    ["NOT_EQUAL", "$CARD.groupId", "$ASIDE_ID"],
                    ["NOT_EQUAL", "$CARD.groupId", "$REMOVED_ID"],
                    ["NOT_EQUAL", "$CARD.groupId", "$EXILED_ID"],
                    ["NOT_EQUAL", "$CARD.groupId", "$SIDE_DECK_ID"],
                    ["EQUAL", "$CARD.sides.B.databaseId", null],
                    ["EQUAL", "$CARD.sides.B.name", "Player Card"]
                ]]],
                ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                    ["MOVE_CARD", "$CARD.id", "$REMOVED_ID", -1]
                ]],
                ["SET", "/playerData/$TARGET_PLAYER/resources", 0],
                ["SET", "/cardById/$MINI_INVESTIGATOR.id/eliminated", true],
                ["SET", "/cardById/$TARGET_CARD_ID/eliminated", true],
                ["SET", "/playerData/$TARGET_PLAYER/arkhamPlayerInPlay", false]
            ]
        },
        "GET_ACTIVE_MINI_INVESTIGATORS": {
            "args": [],
            "code": [
                ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "sharedLocations"],
                    ["EQUAL", "$CARD.currentSide", "A"],
                    ["EQUAL", "$CARD.currentFace.type", "MiniInvestigator"],
                    ["NOT_EQUAL", "$CARD.eliminated", true]
                ]]
            ]
        },
        "CAN_END_INVESTIGATOR_TURN": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$SET_PHASE", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "CAN_END_INVESTIGATOR_TURN.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "CAN_END_INVESTIGATOR_TURN.TARGET_CARD_ID"]],
                ["VALIDATE_BOOLEAN", "$SET_PHASE", "CAN_END_INVESTIGATOR_TURN.SET_PHASE"],
                ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                ["AND",
                    ["EQUAL", "$GAME.arkhamScenarioInit", false],
                    ["EQUAL", "$GAME.arkhamActiveInvestigator", "$TARGET_CARD.cardOwner"],
                    ["OR",
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Investigator"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "MiniInvestigator"]
                    ],
                    ["NOT_EQUAL", "$INVESTIGATOR", null],
                    ["NOT_EQUAL", "$MINI_INVESTIGATOR", null]
                ]
            ]
        },
        "DO_END_INVESTIGATOR_TURN": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$SET_PHASE", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_END_INVESTIGATOR_TURN.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_END_INVESTIGATOR_TURN.TARGET_CARD_ID"]],
                ["VALIDATE_BOOLEAN", "$SET_PHASE", "DO_END_INVESTIGATOR_TURN.SET_PHASE"],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_END_INVESTIGATOR_TURN.LOG_EVENT"],
                ["COND",
                    ["CAN_END_INVESTIGATOR_TURN", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$SET_PHASE", "$ACTOR_PLAYER"],
                    [
                        ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                        ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "end {{$MINI_INVESTIGATOR.currentFace.name}}'s turn.", "ends {{$MINI_INVESTIGATOR.currentFace.name}}'s turn."],
                        ["SET", "/arkhamActiveInvestigator", null],
                        ["UNSET", "/cardById/$INVESTIGATOR.id/borderColor"],
                        ["SET", "/cardById/$INVESTIGATOR.id/turnDone", true],
                        ["UNSET", "/cardById/$MINI_INVESTIGATOR.id/borderColor"],
                        ["SET", "/cardById/$MINI_INVESTIGATOR.id/turnDone", true],
                        ["SET", "/cardById/$MINI_INVESTIGATOR.id/currentSide", "B"],
                        ["COND",
                            ["AND",
                                ["EQUAL", "$SET_PHASE", true],
                                ["NOT_EQUAL", "$GAME.stepId", "I2.E"]
                            ],
                            ["SET", "/stepId", "I2.E"]
                        ]
                    ]
                ]
            ]
        },
        "CAN_START_INVESTIGATOR_TURN": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "CAN_START_INVESTIGATOR_TURN.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "CAN_START_INVESTIGATOR_TURN.TARGET_CARD_ID"]],
                ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                ["AND",
                    ["EQUAL", "$GAME.arkhamScenarioInit", false],
                    ["EQUAL", "$GAME.arkhamActiveInvestigator", null],
                    ["OR",
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Investigator"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "MiniInvestigator"]
                    ],
                    ["NOT_EQUAL", "$TARGET_CARD.eliminated", true],
                    ["NOT_EQUAL", "$TARGET_CARD.turnDone", true],
                    ["OR",
                        ["EQUAL", "$GAME.stepId", "I1"],
                        ["EQUAL", "$GAME.stepId", "W2"],
                        ["EQUAL", "$GAME.stepId", "I2"]
                    ],
                    ["NOT_EQUAL", "$INVESTIGATOR", null],
                    ["NOT_EQUAL", "$MINI_INVESTIGATOR", null]
                ]
            ]
        },
        "DO_START_INVESTIGATOR_TURN": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_START_INVESTIGATOR_TURN.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_START_INVESTIGATOR_TURN.TARGET_CARD_ID"]],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_START_INVESTIGATOR_TURN.LOG_EVENT"],
                ["COND",
                    ["CAN_START_INVESTIGATOR_TURN", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
                    [
                        ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                        ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$TARGET_CARD.cardOwner"]],
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "start {{$MINI_INVESTIGATOR.currentFace.name}}'s turn.", "starts {{$MINI_INVESTIGATOR.currentFace.name}}'s turn."],
                        ["SET", "/arkhamActiveInvestigator", "$TARGET_CARD.cardOwner"],
                        ["SET", "/cardById/$INVESTIGATOR.id/borderColor", "HotPink"],
                        ["SET", "/cardById/$MINI_INVESTIGATOR.id/borderColor", "HotPink"],
                        ["COND",
                            ["NOT_EQUAL", "$GAME.stepId", "I2"],
                            ["SET", "/stepId", "I2"]
                        ]
                    ]
                ]
            ]
        },
        "GET_CARD_SKILL": {
            "args": ["$TARGET_CARD_ID", "$SKILL_PROPERTY"],
            "code": [
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "GET_CARD_SKILL.TARGET_CARD_ID"]],
                ["VALIDATE_NOT_EMPTY", "$SKILL_PROPERTY", "GET_CARD_SKILL.SKILL_PROPERTY"],
                ["VAR", "$SKILL", 0],
                ["COND",
                    ["AND",
                        ["EQUAL", "$SKILL_PROPERTY", "skillWild"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "ChaosToken"]
                    ],
                    ["COND",
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "Bless"],
                        ["UPDATE_VAR", "$SKILL", 2],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "Curse"],
                        ["UPDATE_VAR", "$SKILL", -2],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "+1"],
                        ["UPDATE_VAR", "$SKILL", 1],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-1"],
                        ["UPDATE_VAR", "$SKILL", -1],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-2"],
                        ["UPDATE_VAR", "$SKILL", -2],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-3"],
                        ["UPDATE_VAR", "$SKILL", -3],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-4"],
                        ["UPDATE_VAR", "$SKILL", -4],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-5"],
                        ["UPDATE_VAR", "$SKILL", -5],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-6"],
                        ["UPDATE_VAR", "$SKILL", -6],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-7"],
                        ["UPDATE_VAR", "$SKILL", -7],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "-8"],
                        ["UPDATE_VAR", "$SKILL", -8]
                    ],
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_CARD.currentFace.$SKILL_PROPERTY", null],
                        ["NOT_EQUAL", "$TARGET_CARD.currentFace.$SKILL_PROPERTY", ""],
                        ["GREATER_THAN", "$TARGET_CARD.currentFace.$SKILL_PROPERTY", 0]
                    ],
                    ["UPDATE_VAR", "$SKILL", "$TARGET_CARD.currentFace.$SKILL_PROPERTY"]
                ],
                "$SKILL"
            ]
        },
        "CAN_CALCULATE_SKILL": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$SKILL_NAME", "$SKILL_PROPERTY", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "CAN_CALCULATE_SKILL.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "CAN_CALCULATE_SKILL.TARGET_CARD_ID"]],
                ["VALIDATE_NOT_EMPTY", "$SKILL_NAME", "CAN_CALCULATE_SKILL.SKILL_NAME"],
                ["VALIDATE_NOT_EMPTY", "$SKILL_PROPERTY", "CAN_CALCULATE_SKILL.SKILL_PROPERTY"],
                ["AND",
                    ["EQUAL", "$GAME.arkhamScenarioInit", false],
                    ["EQUAL", "$TARGET_CARD.currentFace.type", "Investigator"],
                    ["NOT_EQUAL", "$TARGET_CARD.eliminated", true]
                ]
            ]
        },
        "DO_CALCULATE_SKILL": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$SKILL_NAME", "$SKILL_PROPERTY", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_CALCULATE_SKILL.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_CALCULATE_SKILL.TARGET_CARD_ID"]],
                ["VALIDATE_NOT_EMPTY", "$SKILL_NAME", "DO_CALCULATE_SKILL.SKILL_NAME"],
                ["VALIDATE_NOT_EMPTY", "$SKILL_PROPERTY", "DO_CALCULATE_SKILL.SKILL_PROPERTY"],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_CALCULATE_SKILL.LOG_EVENT"],
                ["COND",
                    ["CAN_CALCULATE_SKILL", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$SKILL_NAME", "$SKILL_PROPERTY", "$ACTOR_PLAYER"],
                    [
                        ["VAR", "$INVESTIGATOR_SKILL", ["GET_CARD_SKILL", "$TARGET_CARD_ID", "$SKILL_PROPERTY"]],
                        ["VAR", "$SUM_CHAOS_TOKENS", 0],
                        ["VAR", "$SUM_SKILL_ICONS", 0],
                        ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["EQUAL", "$CARD.groupId", "sharedVoid"]]],
                        ["VAR", "$SUFFIX", ""],
                        ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                            ["COND",
                                ["EQUAL", "$CARD.currentFace.type", "ChaosToken"],
                                [
                                    ["INCREASE_VAR", "$SUM_CHAOS_TOKENS", ["GET_CARD_SKILL", "$CARD.id", "skillWild"]],
                                    ["COND",
                                        ["OR",
                                            ["EQUAL", "$CARD.currentFace.name", "Auto Fail"],
                                            ["EQUAL", "$CARD.currentFace.name", "Elder Sign"],
                                            ["EQUAL", "$CARD.currentFace.name", "Cultist"],
                                            ["EQUAL", "$CARD.currentFace.name", "Elder Thing"],
                                            ["EQUAL", "$CARD.currentFace.name", "Skull"],
                                            ["EQUAL", "$CARD.currentFace.name", "Tablet"],
                                            ["EQUAL", "$CARD.currentFace.name", "Frost"]
                                        ],
                                        ["UPDATE_VAR", "$SUFFIX", "{{$SUFFIX}} & {{$CARD.currentFace.name}}"]
                                    ]
                                ],
                                ["TRUE"],
                                [
                                    ["INCREASE_VAR", "$SUM_SKILL_ICONS", ["GET_CARD_SKILL", "$CARD.id", "$SKILL_PROPERTY"]],
                                    ["INCREASE_VAR", "$SUM_SKILL_ICONS", ["GET_CARD_SKILL", "$CARD.id", "skillWild"]]
                                ]
                            ]
                        ]],
                        ["VAR", "$CHAOS_TOKENS_TEXT", ""],
                        ["COND",
                            ["GREATER_EQUAL", "$SUM_CHAOS_TOKENS", 0],
                            ["UPDATE_VAR", "$CHAOS_TOKENS_TEXT", "+"]
                        ],
                        ["UPDATE_VAR", "$CHAOS_TOKENS_TEXT", "{{$CHAOS_TOKENS_TEXT}}{{$SUM_CHAOS_TOKENS}}{{$SUFFIX}}"],
                        ["VAR", "$SKILL_ICONS_TEXT", ""],
                        ["COND",
                            ["GREATER_EQUAL", "$SUM_SKILL_ICONS", 0],
                            ["UPDATE_VAR", "$SKILL_ICONS_TEXT", "+"]
                        ],
                        ["UPDATE_VAR", "$SKILL_ICONS_TEXT", "{{$SKILL_ICONS_TEXT}}{{$SUM_SKILL_ICONS}}"],
                        ["VAR", "$TOTAL", ["ADD", "$INVESTIGATOR_SKILL", ["ADD", "$SUM_CHAOS_TOKENS", "$SUM_SKILL_ICONS"]]],
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "calculate {{$TARGET_CARD.currentFace.name}}'s base {{$SKILL_NAME}} value: {{$TOTAL}} (investigator {{$INVESTIGATOR_SKILL}}, chaos {{$CHAOS_TOKENS_TEXT}}, icons {{$SKILL_ICONS_TEXT}}).", "calculates {{$TARGET_CARD.currentFace.name}}'s base {{$SKILL_NAME}} value: {{$TOTAL}} (investigator {{$INVESTIGATOR_SKILL}}, chaos {{$CHAOS_TOKENS_TEXT}}, icons {{$SKILL_ICONS_TEXT}})."]
                    ]
                ]
            ]
        }
    },
    "prompts": {
        "eliminateInvestigator": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID"],
            "message": "Select fate of {{$CARD_BY_ID.$TARGET_CARD_ID.currentFace.name}}.",
            "options": [
                {
                    "label": "Resigned",
                    "hotkey": "R",
                    "code": [
                        ["DO_ELIMINATE_INVESTIGATOR", "$TARGET_PLAYER", "$TARGET_CARD_ID", "resignation", true, "$PLAYER_N"]
                    ]
                },
                {
                    "label": "Defated by damage",
                    "hotkey": "D",
                    "code": [
                        ["DO_ELIMINATE_INVESTIGATOR", "$TARGET_PLAYER", "$TARGET_CARD_ID", "damage", true, "$PLAYER_N"]
                    ]
                },
                {
                    "label": "Defated by horror",
                    "hotkey": "H",
                    "code": [
                        ["DO_ELIMINATE_INVESTIGATOR", "$TARGET_PLAYER", "$TARGET_CARD_ID", "horror", true, "$PLAYER_N"]
                    ]
                },
                {
                    "label": "Other",
                    "hotkey": "O",
                    "code": [
                        ["DO_ELIMINATE_INVESTIGATOR", "$TARGET_PLAYER", "$TARGET_CARD_ID", "other reasons", true, "$PLAYER_N"]
                    ]
                },
                {
                    "label": "Cancel",
                    "hotkey": "X"
                }
            ]
        },
        "chooseNewLeadInvestigator": {
            "args": [],
            "message": "Choose a new lead investigator.",
            "options": [

             ]
        }
    },
    "labels": {
        "eliminateInvestigatorMenu": {
            "English": "Eliminate"
        },
        "investigatorTurn": {
            "English": "Start/end turn"
        },
        "investigatorStartTurnMenu": {
            "English": "Start turn (I)"
        },
        "investigatorEndTurnMenu": {
            "English": "End turn (I)"
        },
        "calculateWillpower": {
            "English": "Calculate willpower"
        },
        "calculateWillpowerMenu": {
            "English": "Calculate willpower (7)"
        },
        "calculateIntellect": {
            "English": "Calculate intellect"
        },
        "calculateIntellectMenu": {
            "English": "Calculate intellect (8)"
        },
        "calculateCombat": {
            "English": "Calculate combat"
        },
        "calculateCombatMenu": {
            "English": "Calculate combat (9)"
        },
        "calculateAgility": {
            "English": "Calculate agility"
        },
        "calculateAgilityMenu": {
            "English": "Calculate agility (0)"
        }
    }
}