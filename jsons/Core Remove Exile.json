{
    "actionLists": {
        "setAsideCard": [
            ["COND",
                ["CAN_SET_ASIDE_CARD", "$PLAYER_N", "$ACTIVE_CARD_ID", "$PLAYER_N"],
                ["DO_SET_ASIDE_CARD", "$PLAYER_N", "$ACTIVE_CARD_ID", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot set {{$ACTIVE_FACE.name}} aside, {{$ALIAS_N}}."]
            ]
        ],
        "removeCard": [
            ["COND",
                ["CAN_REMOVE_CARD", "$PLAYER_N", "$ACTIVE_CARD_ID", "$PLAYER_N"],
                ["DO_REMOVE_CARD", "$PLAYER_N", "$ACTIVE_CARD_ID", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot remove {{$ACTIVE_FACE.name}} from the game, {{$ALIAS_N}}."]
            ]
        ],
        "exileCard": [
            ["COND",
                ["CAN_EXILE_CARD", "$PLAYER_N", "$ACTIVE_CARD_ID", "$PLAYER_N"],
                ["DO_EXILE_CARD", "$PLAYER_N", "$ACTIVE_CARD_ID", true, "$PLAYER_N"],
                ["TRUE"],
                ["LOG", "└── You cannot exile {{$ACTIVE_FACE.name}} from the game, {{$ALIAS_N}}."]
            ]
        ],
        "browseAside": [
            ["VAR", "$TARGET_GROUP_ID", null],
            ["COND",
                ["EQUAL", "$ACTIVE_GROUP_ID", "player1Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player1Aside"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player2Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player2Aside"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player3Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player3Aside"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player4Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player4Aside"]
            ],
            ["COND",
                ["NOT_EQUAL", "$TARGET_GROUP_ID", null],
                ["DO_BROWSE_GROUP", "$PLAYER_N", "$TARGET_GROUP_ID"],
                ["TRUE"],
                ["LOG", "└── You cannot browse Set Aside from here, {{$ALIAS_N}}."]
            ]
        ],
        "browseRemoved": [
            ["VAR", "$TARGET_GROUP_ID", null],
            ["COND",
                ["EQUAL", "$ACTIVE_GROUP_ID", "sharedEncounterDiscard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "sharedRemoved"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player1Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player1Removed"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player2Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player2Removed"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player3Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player3Removed"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player4Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player4Removed"]
            ],
            ["COND",
                ["NOT_EQUAL", "$TARGET_GROUP_ID", null],
                ["DO_BROWSE_GROUP", "$PLAYER_N", "$TARGET_GROUP_ID"],
                ["TRUE"],
                ["LOG", "└── You cannot browse Removed from here, {{$ALIAS_N}}."]
            ]
        ],
        "browseExiled": [
            ["VAR", "$TARGET_GROUP_ID", null],
            ["COND",
                ["EQUAL", "$ACTIVE_GROUP_ID", "player1Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player1Exiled"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player2Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player2Exiled"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player3Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player3Exiled"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player4Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player4Exiled"]
            ],
            ["COND",
                ["NOT_EQUAL", "$TARGET_GROUP_ID", null],
                ["DO_BROWSE_GROUP", "$PLAYER_N", "$TARGET_GROUP_ID"],
                ["TRUE"],
                ["LOG", "└── You cannot browse Exiled from here, {{$ALIAS_N}}."]
            ]
        ],
        "browseSideDeck": [
            ["VAR", "$TARGET_GROUP_ID", null],
            ["COND",
                ["EQUAL", "$ACTIVE_GROUP_ID", "player1Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player1SideDeck"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player2Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player2SideDeck"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player3Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player3SideDeck"],
                ["EQUAL", "$ACTIVE_GROUP_ID", "player4Discard"],
                ["UPDATE_VAR", "$TARGET_GROUP_ID", "player4SideDeck"]
            ],
            ["COND",
                ["NOT_EQUAL", "$TARGET_GROUP_ID", null],
                ["DO_BROWSE_GROUP", "$PLAYER_N", "$TARGET_GROUP_ID"],
                ["TRUE"],
                ["LOG", "└── You cannot browse Side Deck from here, {{$ALIAS_N}}."]
            ]
        ]
    },
    "functions": {
        //Checks if a card can be set aside.
        "CAN_SET_ASIDE_CARD": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "CAN_SET_ASIDE_CARD.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "CAN_SET_ASIDE_CARD.TARGET_CARD_ID"]],
                ["AND",
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedNotInPlay"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedVictoryDisplay"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedTokens"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedChaosBag"],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Aside"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Removed"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Exiled"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "SideDeck"], true],
                    ["OR",
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "Encounter Card"],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "Player Card"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Asset"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Treachery"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Event"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Skill"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Enemy"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Agenda"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Act"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Location"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Story"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Key"]
                    ]
                ]
            ]
        },
        //Sets aside a specific card (attached cards are first discarded). If the card is owned by the scenario attached cards are not discarded.
        "DO_SET_ASIDE_CARD": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_SET_ASIDE_CARD.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_SET_ASIDE_CARD.TARGET_CARD_ID"]],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_SET_ASIDE_CARD.LOG_EVENT"],
                ["DEFINE", "$DO_SET_ASIDE_CARD_RESULT", false],
                ["COND",
                    ["CAN_SET_ASIDE_CARD", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
                    [
                        ["COND",
                            ["EQUAL", "$TARGET_CARD.cardOwner", "shared"],
                            ["DO_LOGF", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "set{A} {0:P}'s {1:C} aside.", ["LIST", "$TARGET_CARD.cardOwner", "$TARGET_CARD"]],
                            ["TRUE"],
                            [
                                ["DO_LOGF", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "set{A} {0:P}'s {1:CA} aside.", ["LIST", "$TARGET_CARD.cardOwner", "$TARGET_CARD"]],
                                ["DO_FORCE_DISCARD_ALL_ATTACHED_CARDS", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", null]
                            ]
                        ],
                        ["MOVE_CARD", "$TARGET_CARD_ID", ["GET_CONTROLLER_ASIDE", "$TARGET_CARD.cardOwner"], -1],
                        ["DEFINE", "$DO_SET_ASIDE_CARD_RESULT", true]
                    ]
                ]
            ]
        },
        //Sets aside all cards named $TARGET_NAME, and shuffles all groups affected by the operation (where allowed).
        "DO_SET_ASIDE_NAMED_CARDS": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_SET_ASIDE_NAMED_CARDS.TARGET_PLAYER"],
                ["VALIDATE_NOT_EMPTY", "$TARGET_NAME", "DO_SET_ASIDE_NAMED_CARDS.TARGET_NAME"],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_SET_ASIDE_NAMED_CARDS.LOG_EVENT"],
                ["VAR", "$SELECTED_CARDS", ["GET_NAMED_CARDS", "$TARGET_NAME"]],
                ["VAR", "$SELECTED_COUNT", ["LENGTH", "$SELECTED_CARDS"]],
                ["COND",
                    ["GREATER_THAN", "$SELECTED_COUNT", 0],
                    [
                        ["DO_LOGF", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "set{A} {0} card{0:S} aside.", ["LIST", "$SELECTED_COUNT"]],
                        ["VAR", "$SHUFFLE_GROUPS", ["LIST"]],
                        ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                            ["DO_SET_ASIDE_CARD", "$TARGET_PLAYER", "$CARD.id", "$LOG_EVENT", null],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$DO_SET_ASIDE_CARD_RESULT", true],
                                    ["EQUAL", ["IN_LIST", "$SHUFFLE_GROUPS", "$CARD.groupId"], false]
                                ],
                                ["UPDATE_VAR", "$SHUFFLE_GROUPS", ["APPEND", "$SHUFFLE_GROUPS", "$CARD.groupId"]]
                            ]
                        ]],
                        ["FOR_EACH_VAL", "$SHUFFLE_GROUP", "$SHUFFLE_GROUPS", [
                            ["DO_SHUFFLE_GROUP", "$TARGET_PLAYER", "$SHUFFLE_GROUP", "$LOG_EVENT", null]
                        ]]
                    ]
                ]
            ]
        },
        //Checks if a card can be removed.
        "CAN_REMOVE_CARD": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "CAN_REMOVE_CARD.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "CAN_REMOVE_CARD.TARGET_CARD_ID"]],
                ["AND",
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedNotInPlay"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedVictoryDisplay"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedTokens"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedChaosBag"],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Aside"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Removed"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Exiled"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "SideDeck"], true],
                    ["OR",
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "Encounter Card"],
                        ["EQUAL", "$TARGET_CARD.currentFace.name", "Player Card"],
                        ["AND",
                            ["EQUAL", "$TARGET_CARD.currentFace.type", "Investigator"],
                            ["EQUAL", "$TARGET_CARD.eliminated", true]
                        ],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Asset"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Treachery"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Event"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Skill"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Enemy"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Agenda"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Act"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Location"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Story"],
                        ["EQUAL", "$TARGET_CARD.currentFace.type", "Key"],
                        ["AND",
                            ["EQUAL", "$TARGET_CARD.currentFace.type", "MiniInvestigator"],
                            ["EQUAL", "$TARGET_CARD.eliminated", true]
                        ]
                    ]
                ]
            ]
        },
        //Removes a specific card (attached cards are first discarded).
        "DO_REMOVE_CARD": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_REMOVE_CARD.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_REMOVE_CARD.TARGET_CARD_ID"]],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_REMOVE_CARD.LOG_EVENT"],
                ["DEFINE", "$DO_REMOVE_CARD_RESULT", false],
                ["COND",
                    ["CAN_REMOVE_CARD", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
                    [
                        ["DO_LOGF", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "remove{A} {0:P}'s {1:CA} from the game.", ["LIST", "$TARGET_CARD.cardOwner", "$TARGET_CARD"]],
                        ["DO_FORCE_DISCARD_ALL_ATTACHED_CARDS", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", null],
                        ["MOVE_CARD", "$TARGET_CARD_ID", ["GET_CONTROLLER_REMOVED", "$TARGET_CARD.cardOwner"], -1],
                        ["DEFINE", "$DO_REMOVE_CARD_RESULT", true]
                    ]
                ]
            ]
        },
        //Removes all cards named $TARGET_NAME, and shuffles all groups affected by the operation (where allowed).
        "DO_REMOVE_NAMED_CARDS": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_REMOVE_NAMED_CARDS.TARGET_PLAYER"],
                ["VALIDATE_NOT_EMPTY", "$TARGET_NAME", "DO_REMOVE_NAMED_CARDS.TARGET_NAME"],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_REMOVE_NAMED_CARDS.LOG_EVENT"],
                ["VAR", "$SELECTED_CARDS", ["GET_NAMED_CARDS", "$TARGET_NAME"]],
                ["VAR", "$SELECTED_COUNT", ["LENGTH", "$SELECTED_CARDS"]],
                ["COND",
                    ["GREATER_THAN", "$SELECTED_COUNT", 0],
                    [
                        ["DO_LOGF", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "remove{A} {0} card{0:S} from the game.", ["LIST", "$SELECTED_COUNT"]],
                        ["VAR", "$SHUFFLE_GROUPS", ["LIST"]],
                        ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                            ["DO_REMOVE_CARD", "$TARGET_PLAYER", "$CARD.id", "$LOG_EVENT", null],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$DO_REMOVE_CARD_RESULT", true],
                                    ["EQUAL", ["IN_LIST", "$SHUFFLE_GROUPS", "$CARD.groupId"], false]
                                ],
                                ["UPDATE_VAR", "$SHUFFLE_GROUPS", ["APPEND", "$SHUFFLE_GROUPS", "$CARD.groupId"]]
                            ]
                        ]],
                        ["FOR_EACH_VAL", "$SHUFFLE_GROUP", "$SHUFFLE_GROUPS", [
                            ["DO_SHUFFLE_GROUP", "$TARGET_PLAYER", "$SHUFFLE_GROUP", "$LOG_EVENT", null]
                        ]]
                    ]
                ]
            ]
        },
        //Checks if a card can be exiled.
        "CAN_EXILE_CARD": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "CAN_EXILE_CARD.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "CAN_EXILE_CARD.TARGET_CARD_ID"]],
                ["AND",
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedNotInPlay"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedVictoryDisplay"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedTokens"],
                    ["NOT_EQUAL", "$TARGET_CARD.groupId", "sharedChaosBag"],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Aside"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Removed"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "Exiled"], true],
                    ["NOT_EQUAL", ["IN_STRING", "$TARGET_CARD.groupId", "SideDeck"], true],
                    ["IS_PLAYER_CARD", "$TARGET_CARD"]
                ]
            ]
        },
        //Exiles a specific card (attached cards are first discarded). If the card is owned by the scenario it is removed instead.
        "DO_EXILE_CARD": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_EXILE_CARD.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_EXILE_CARD.TARGET_CARD_ID"]],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_EXILE_CARD.LOG_EVENT"],
                ["DEFINE", "$DO_EXILE_CARD_RESULT", false],
                ["COND",
                    ["CAN_EXILE_CARD", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$ACTOR_PLAYER"],
                    [
                        ["VAR", "$TARGET_NAME", ["GET_CARD_NAME", "$TARGET_CARD_ID"]],
                        ["DO_LOGF", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "{0}{A} {1:P}'s {2:CA} from the game.", ["LIST", ["INLINE_IF", ["EQUAL", "$TARGET_CARD.cardOwner", "shared"], "remove", "exile"], "$TARGET_CARD.cardOwner", "$TARGET_CARD"]],
                        ["DO_FORCE_DISCARD_ALL_ATTACHED_CARDS", "$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", null],
                        ["MOVE_CARD", "$TARGET_CARD_ID", ["GET_CONTROLLER_EXILED", "$TARGET_CARD.cardOwner"], -1],
                        ["DEFINE", "$DO_EXILE_CARD_RESULT", true]
                    ]
                ]
            ]
        },
        //Exiles all cards named $TARGET_NAME, and shuffles all groups affected by the operation (where allowed).
        "DO_EXILE_NAMED_CARDS": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_EXILE_NAMED_CARDS.TARGET_PLAYER"],
                ["VALIDATE_NOT_EMPTY", "$TARGET_NAME", "DO_EXILE_NAMED_CARDS.TARGET_NAME"],
                ["VALIDATE_BOOLEAN", "$LOG_EVENT", "DO_EXILE_NAMED_CARDS.LOG_EVENT"],
                ["VAR", "$SELECTED_CARDS", ["GET_NAMED_CARDS", "$TARGET_NAME"]],
                ["VAR", "$SELECTED_COUNT", ["LENGTH", "$SELECTED_CARDS"]],
                ["COND",
                    ["GREATER_THAN", "$SELECTED_COUNT", 0],
                    [
                        ["DO_LOGF", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "exile{A} {0} card{0:S} from the game.", ["LIST", "$SELECTED_COUNT"]],
                        ["VAR", "$SHUFFLE_GROUPS", ["LIST"]],
                        ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                            ["DO_EXILE_CARD", "$TARGET_PLAYER", "$CARD.id", "$LOG_EVENT", null],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$DO_EXILE_CARD_RESULT", true],
                                    ["EQUAL", ["IN_LIST", "$SHUFFLE_GROUPS", "$CARD.groupId"], false]
                                ],
                                ["UPDATE_VAR", "$SHUFFLE_GROUPS", ["APPEND", "$SHUFFLE_GROUPS", "$CARD.groupId"]]
                            ]
                        ]],
                        ["FOR_EACH_VAL", "$SHUFFLE_GROUP", "$SHUFFLE_GROUPS", [
                            ["DO_SHUFFLE_GROUP", "$TARGET_PLAYER", "$SHUFFLE_GROUP", "$LOG_EVENT", null]
                        ]]
                    ]
                ]
            ]
        }
    },
    "labels": {
        "setAsideCardMenu": {
            "English": "Set aside"
        },
        "removeCard": {
            "English": "Remove"
        },
        "removeCardMenu": {
            "English": "Remove (Delete)"
        },
        "exileCardMenu": {
            "English": "Exile"
        },
        "browseAsideMenu": {
            "English": "Browse Set Aside"
        },
        "browseRemovedMenu": {
            "English": "Browse Removed"
        },
        "browseExiledMenu": {
            "English": "Browse Exiled"
        },
        "browseSideDeckMenu": {
            "English": "Browse Side Deck"
        }
    }
}