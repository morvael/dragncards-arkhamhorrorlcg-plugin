{
    "functions": {
        "DO_CREATE_CARDS": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_NAME", null],
                        ["NOT_EQUAL", "$TARGET_DATABASE_ID", null],
                        ["NOT_EQUAL", "$TARGET_QUANTITY", null],
                        ["GREATER_THAN", "$TARGET_QUANTITY", 0],
                        ["NOT_EQUAL", "$TARGET_GROUP_ID", null]
                    ],
                    [
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "load {{$TARGET_QUANTITY}}x {{$TARGET_NAME}} into {{$GROUP_BY_ID.$TARGET_GROUP_ID.label}}.", "loads {{$TARGET_QUANTITY}}x {{$TARGET_NAME}} into {{$GROUP_BY_ID.$TARGET_GROUP_ID.label}}."],
                        ["VAR", "$LOAD_LIST_ITEM", ["PROCESS_MAP", {"databaseId": "$TARGET_DATABASE_ID", "quantity": "$TARGET_QUANTITY", "loadGroupId": "$TARGET_GROUP_ID"}]],
                        ["LOAD_CARDS", ["LIST", "$LOAD_LIST_ITEM"]]
                    ]
                ]
            ]
        },
        "DO_CREATE_CARDS_SCN": {
            "args": ["$TARGET_NAME", "$TARGET_DATABASE_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID"],
            "code": [
                ["DO_CREATE_CARDS", "$GAME.firstPlayer", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID", true, null]
            ]
        },
        "DO_CREATE_STORY_CARD_SCN": {
            "args": ["$TARGET_NAME", "$TARGET_DATABASE_ID", "$TARGET_INDEX", "$TARGET_GROUP_ID"],
            "code": [
                ["DO_CREATE_CARDS_SCN", "$TARGET_NAME", "$TARGET_DATABASE_ID", 1, "$TARGET_GROUP_ID"],
                ["VAR", "$CREATED_CARD_ID", "{{$GAME.lastLoadedCardIds.[0]}}"],
                ["MOVE_CARD", "$CREATED_CARD_ID", "$TARGET_GROUP_ID", "$TARGET_INDEX", 0, {"combine": false, "allowFlip": false}]
            ]
        },
        "DO_CREATE_DECK_CARDS_SCN": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$TARGET_QUANTITY"],
            "code": [
                ["VAR", "$TARGET_PLAYER_DECK", ["GET_CONTROLLER_DECK", "$TARGET_PLAYER"]],
                ["DO_CREATE_CARDS_SCN", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$TARGET_QUANTITY", "$TARGET_PLAYER_DECK"],
                ["DO_SHUFFLE_GROUP", "$TARGET_PLAYER", "$TARGET_PLAYER_DECK", true, null]
            ]
        },
        "DO_CREATE_MISSING_CARDS_SCN": {
            "args": ["$TARGET_NAME", "$TARGET_DATABASE_ID", "$TARGET_MAX_QUANTITY", "$TARGET_GROUP_ID"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$TARGET_NAME", "DO_CREATE_MISSING_CARDS_SCN.TARGET_NAME"],
                ["VALIDATE_NOT_EMPTY", "$TARGET_DATABASE_ID", "DO_CREATE_MISSING_CARDS_SCN.TARGET_DATABASE_ID"],
                ["VALIDATE_GT0", "$TARGET_MAX_QUANTITY", "DO_CREATE_MISSING_CARDS_SCN.TARGET_MAX_QUANTITY"],
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "DO_CREATE_MISSING_CARDS_SCN.TARGET_GROUP_ID"]],
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.sides.A.databaseId", "$TARGET_DATABASE_ID"]
                ]]],
                ["VAR", "$SELECTED_COUNT", ["LENGTH", "$SELECTED_CARDS"]],
                ["COND",
                    ["LESS_THAN", "$SELECTED_COUNT", "$TARGET_MAX_QUANTITY"],
                    [
                        ["VAR", "$CARDS_TO_ADD", ["SUBTRACT", "$TARGET_MAX_QUANTITY", "$SELECTED_COUNT"]],
                        ["DO_CREATE_CARDS_SCN", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$CARDS_TO_ADD", "$TARGET_GROUP_ID"]
                    ]
                ]
            ]
        },
        "DO_MOVE_DECK_CARDS": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$SOURCE_GROUP_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_NAME", null],
                        ["NOT_EQUAL", "$SOURCE_GROUP_ID", null],
                        ["NOT_EQUAL", "$TARGET_QUANTITY", null],
                        ["GREATER_THAN", "$TARGET_QUANTITY", 0],
                        ["NOT_EQUAL", "$TARGET_GROUP_ID", null]
                    ],
                    [
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "move {{$TARGET_QUANTITY}}x {{$TARGET_NAME}} from {{$GROUP_BY_ID.$SOURCE_GROUP_ID.label}} into {{$GROUP_BY_ID.$TARGET_GROUP_ID.label}}.", "moves {{$TARGET_QUANTITY}}x {{$TARGET_NAME}} from {{$GROUP_BY_ID.$SOURCE_GROUP_ID.label}} into {{$GROUP_BY_ID.$TARGET_GROUP_ID.label}}."],
                        ["FOR_EACH_START_STOP_STEP", "$I", 0, "$TARGET_QUANTITY", 1, [
                            ["VAR", "$TOP_CARD", ["GET_TOP_CARD", "$SOURCE_GROUP_ID"]],
                            ["MOVE_CARD", "$TOP_CARD.id", "$TARGET_GROUP_ID", -1]
                        ]]
                    ]
                ]
            ]
        },
        "DO_MOVE_DECK_CARDS_SCN": {
            "args": ["$TARGET_NAME", "$SOURCE_GROUP_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID"],
            "code": [
                ["DO_MOVE_DECK_CARDS", "$GAME.firstPlayer", "$TARGET_NAME", "$SOURCE_GROUP_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID", true, null]
            ]
        },
        "DO_MOVE_NAMED_DECK_CARDS": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$SOURCE_GROUP_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_NAME", null],
                        ["NOT_EQUAL", "$SOURCE_GROUP_ID", null],
                        ["NOT_EQUAL", "$TARGET_QUANTITY", null],
                        ["GREATER_THAN", "$TARGET_QUANTITY", 0],
                        ["NOT_EQUAL", "$TARGET_GROUP_ID", null]
                    ],
                    [
                        ["VAR", "$TARGET_CARD", ["GET_NAMED_DECK_CARD", "$TARGET_NAME", "$SOURCE_GROUP_ID"]],
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "move {{$TARGET_QUANTITY}}x {{$TARGET_CARD.sides.A.name}} from {{$GROUP_BY_ID.$SOURCE_GROUP_ID.label}} into {{$GROUP_BY_ID.$TARGET_GROUP_ID.label}}.", "moves {{$TARGET_QUANTITY}}x {{$TARGET_CARD.sides.A.name}} from {{$GROUP_BY_ID.$SOURCE_GROUP_ID.label}} into {{$GROUP_BY_ID.$TARGET_GROUP_ID.label}}."],
                        ["FOR_EACH_START_STOP_STEP", "$I", 0, "$TARGET_QUANTITY", 1, [
                            ["VAR", "$NAMED_CARD", ["GET_NAMED_DECK_CARD", "$TARGET_NAME", "$SOURCE_GROUP_ID"]],
                            ["MOVE_CARD", "$NAMED_CARD.id", "$TARGET_GROUP_ID", -1]
                        ]]
                    ]
                ]
            ]
        },
        "DO_MOVE_NAMED_DECK_CARDS_SCN": {
            "args": ["$TARGET_NAME", "$SOURCE_GROUP_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID"],
            "code": [
                ["DO_MOVE_NAMED_DECK_CARDS", "$GAME.firstPlayer", "$TARGET_NAME", "$SOURCE_GROUP_ID", "$TARGET_QUANTITY", "$TARGET_GROUP_ID", true, null]
            ]
        },
        "DO_LOAD_CARDS": {
            "args": ["$TARGET_PLAYER", "$LOAD_LIST_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$LOAD_LIST_ID", null]
                    ],
                    [
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "load cards from {{$LOAD_LIST_ID}}.", "loads cards from {{$LOAD_LIST_ID}}."],
                        ["LOAD_CARDS", "$LOAD_LIST_ID"]
                    ]
                ]
            ]
        },
        "DO_LOAD_CARDS_SCN": {
            "args": ["$LOAD_LIST_ID"],
            "code": [
                ["DO_LOAD_CARDS", "$GAME.firstPlayer", "$LOAD_LIST_ID", true, null]
            ]
        },
        "DO_LOAD_N_CARDS": {
            "args": ["$TARGET_PLAYER", "$LOAD_LIST_ID", "$NUMBER_TO_LOAD", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$LOAD_LIST_ID", null],
                        ["NOT_EQUAL", "$NUMBER_TO_LOAD", null],
                        ["GREATER_THAN", "$NUMBER_TO_LOAD", 0]
                    ],
                    [
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER",
                            ["GET_NUMERIC_LOG", "load ", "load ", "$NUMBER_TO_LOAD", " random card from {{$LOAD_LIST_ID}}.", " random cards from {{$LOAD_LIST_ID}}."],
                            ["GET_NUMERIC_LOG", "loads ", "loads ", "$NUMBER_TO_LOAD", " random card from {{$LOAD_LIST_ID}}.", " random cards from {{$LOAD_LIST_ID}}."]
                        ],
                        ["LOAD_CARDS", ["CHOOSE_N", ["GET_LOAD_LIST", "$LOAD_LIST_ID"], "$NUMBER_TO_LOAD"]]
                    ]
                ]
            ]
        },
        "DO_LOAD_N_CARDS_SCN": {
            "args": ["$LOAD_LIST_ID", "$NUMBER_TO_LOAD"],
            "code": [
                ["DO_LOAD_N_CARDS", "$GAME.firstPlayer", "$LOAD_LIST_ID", "$NUMBER_TO_LOAD", true, null]
            ]
        },
        "DO_LOAD_RANDOM_LIST": {
            "args": ["$TARGET_PLAYER", "$LIST_OF_LOAD_LIST_IDS", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$LIST_OF_LOAD_LIST_IDS", null],
                        ["GREATER_THAN", ["LENGTH", "$LIST_OF_LOAD_LIST_IDS"], 0]
                    ],
                    [
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", ["GET_FORMATTED_LIST", "load cards from one of: ", "$LIST_OF_LOAD_LIST_IDS", "."], ["GET_FORMATTED_LIST", "loads cards from one of: ", "$LIST_OF_LOAD_LIST_IDS", "."]],
                        ["LOAD_CARDS", ["AT_INDEX", "$LIST_OF_LOAD_LIST_IDS", ["RANDOM_INT", 0, ["LENGTH", "$LIST_OF_LOAD_LIST_IDS"]]]]
                    ]
                ]
            ]
        },
        "DO_LOAD_RANDOM_LIST_SCN": {
            "args": ["$LIST_OF_LOAD_LIST_IDS"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$LIST_OF_LOAD_LIST_IDS", null],
                        ["GREATER_THAN", ["LENGTH", "$LIST_OF_LOAD_LIST_IDS"], 0]
                    ],
                    [
                        ["DO_LOG", true, null, "$GAME.firstPlayer", ["GET_FORMATTED_LIST", "load cards from one of: ", "$LIST_OF_LOAD_LIST_IDS", "."], ["GET_FORMATTED_LIST", "loads cards from one of: ", "$LIST_OF_LOAD_LIST_IDS", "."]],
                        ["LOAD_CARDS", ["AT_INDEX", "$LIST_OF_LOAD_LIST_IDS", ["RANDOM_INT", 0, ["LENGTH", "$LIST_OF_LOAD_LIST_IDS"]]]]
                    ]
                ]
            ]
        },
        "DO_DELETE_CARD": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_CARD_ID", null]
                    ],
                    [
                        ["VAR", "$TARGET_CARD", "$CARD_BY_ID.$TARGET_CARD_ID"],
                        ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "remove {{$TARGET_CARD.currentFace.name}} from the game.", "removes {{$TARGET_CARD.currentFace.name}} from the game."],
                        ["DELETE_CARD", "$TARGET_CARD_ID"]
                    ]
                ]
            ]
        },
        "DO_DELETE_LOCATION": {
            "args": ["$TARGET_PLAYER", "$LOCATION_CARD_NAME", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["VAR", "$LOCATION_CARD", ["GET_NAMED_MAP_LOCATION", "$LOCATION_CARD_NAME"]],
                ["DO_DELETE_CARD", "$TARGET_PLAYER", "$LOCATION_CARD.id", "$LOG_EVENT", "$ACTOR_PLAYER"]
            ]
        },
        "DO_DELETE_LOCATION_SCN": {
            "args": ["$LOCATION_CARD_NAME"],
            "code": [
                ["DO_DELETE_LOCATION", "$GAME.firstPlayer", "$LOCATION_CARD_NAME", true, null]
            ]
        },
        "DO_DELETE_ENCOUNTER_CARDS_SCN": {
            "args": ["$TARGET_NAME", "$TARGET_DATABASE_ID"],
            "code": [
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "sharedEncounterDeck"],
                    ["EQUAL", "$CARD.sides.A.databaseId", "$TARGET_DATABASE_ID"]
                ]]],
                ["VAR", "$SELECTED_COUNT", ["LENGTH", "$SELECTED_CARDS"]],
                ["COND",
                    ["GREATER_THAN", "$SELECTED_COUNT", 0],
                    [
                        ["DO_LOG_SCN", "$GAME.firstPlayer", "removes {{$SELECTED_COUNT}}x {{$TARGET_NAME}} from the game."],
                        ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                            ["DELETE_CARD", "$CARD.id"]
                        ]]
                    ]
                ]
            ]
        },
        "DO_SPAWN_ENCOUNTER_AT_LOCATION": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_NAME", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["DEFINE", "$DO_SPAWN_ENCOUNTER_AT_LOCATION_RESULT", null],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_CARD_NAME", null],
                        ["NOT_EQUAL", "$LOCATION_CARD_NAME", null],
                        ["NOT_EQUAL", "$LEFT_MOD", null],
                        ["NOT_EQUAL", "$TOP_MOD", null]
                    ],
                    [
                        ["VAR", "$TARGET_CARD", ["GET_NAMED_ENCOUNTER_DECK_CARD", "$TARGET_CARD_NAME"]],
                        ["VAR", "$LOCATION_CARD", ["GET_NAMED_MAP_LOCATION", "$LOCATION_CARD_NAME"]],
                        ["COND",
                            ["AND",
                                ["NOT_EQUAL", "$TARGET_CARD", null],
                                ["NOT_EQUAL", "$LOCATION_CARD", null]
                            ],
                            [
                                ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "spawn {{$TARGET_CARD.sides.A.name}} at {{$LOCATION_CARD.currentFace.name}}.", "spawns {{$TARGET_CARD.sides.A.name}} at {{$LOCATION_CARD.currentFace.name}}."],
                                ["MOVE_CARD", "$TARGET_CARD.id", "sharedLocations", -1, 0],
                                ["SET", "/cardById/$TARGET_CARD.id/currentSide", "A"],
                                ["DO_SET_CARD_LOCATION", "$TARGET_CARD.id", ["ADD", ["GET_CARD_LEFT", "$LOCATION_CARD.id"], "$LEFT_MOD"], ["ADD", ["GET_CARD_TOP", "$LOCATION_CARD.id"], "$TOP_MOD"]],
                                ["DEFINE", "$DO_SPAWN_ENCOUNTER_AT_LOCATION_RESULT", "$TARGET_CARD.id"]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "DO_SPAWN_ENCOUNTER_AT_LOCATION_SCN": {
            "args": ["$TARGET_CARD_NAME", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD"],
            "code": [
                ["DO_SPAWN_ENCOUNTER_AT_LOCATION", "$GAME.firstPlayer", "$TARGET_CARD_NAME", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD", true, null]
            ]
        },
        "DO_SPAWN_AT_LOCATION": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["DEFINE", "$DO_SPAWN_AT_LOCATION_RESULT", null],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_NAME", null],
                        ["NOT_EQUAL", "$TARGET_DATABASE_ID", null],
                        ["NOT_EQUAL", "$LOCATION_CARD_NAME", null],
                        ["NOT_EQUAL", "$LEFT_MOD", null],
                        ["NOT_EQUAL", "$TOP_MOD", null]
                    ],
                    [
                        ["DO_CREATE_CARDS", "$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID", 1, "sharedLocations", false, null],
                        ["VAR", "$TARGET_CARD_ID", "{{$GAME.lastLoadedCardIds.[0]}}"],
                        ["VAR", "$TARGET_CARD", "$CARD_BY_ID.$TARGET_CARD_ID"],
                        ["VAR", "$LOCATION_CARD", ["GET_NAMED_MAP_LOCATION", "$LOCATION_CARD_NAME"]],
                        ["COND",
                            ["AND",
                                ["NOT_EQUAL", "$TARGET_CARD", null],
                                ["NOT_EQUAL", "$LOCATION_CARD", null]
                            ],
                            [
                                ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "spawn {{$TARGET_CARD.currentFace.name}} at {{$LOCATION_CARD.currentFace.name}}.", "spawns {{$TARGET_CARD.currentFace.name}} at {{$LOCATION_CARD.currentFace.name}}."],
                                ["MOVE_CARD", "$TARGET_CARD.id", "sharedLocations", -1, 0],
                                ["DO_SET_CARD_LOCATION", "$TARGET_CARD.id", ["ADD", ["GET_CARD_LEFT", "$LOCATION_CARD.id"], "$LEFT_MOD"], ["ADD", ["GET_CARD_TOP", "$LOCATION_CARD.id"], "$TOP_MOD"]],
                                ["DEFINE", "$DO_SPAWN_AT_LOCATION_RESULT", "$TARGET_CARD.id"]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "DO_SPAWN_AT_LOCATION_SCN": {
            "args": ["$TARGET_NAME", "$TARGET_DATABASE_ID", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD"],
            "code": [
                ["DO_SPAWN_AT_LOCATION", "$GAME.firstPlayer", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD", true, null]
            ]
        },
        "DO_SPAWN_LOCATION": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$LEFT", "$TOP", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["DEFINE", "$DO_SPAWN_LOCATION_RESULT", null],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_NAME", null],
                        ["NOT_EQUAL", "$TARGET_DATABASE_ID", null],
                        ["NOT_EQUAL", "$LEFT", null],
                        ["NOT_EQUAL", "$TOP", null]
                    ],
                    [
                        ["DO_CREATE_CARDS", "$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID", 1, "sharedLocations", true, null],
                        ["VAR", "$TARGET_CARD_ID", "{{$GAME.lastLoadedCardIds.[0]}}"],
                        ["DO_SET_CARD_LOCATION", "$TARGET_CARD_ID", "$LEFT", "$TOP"],
                        ["DEFINE", "$DO_SPAWN_LOCATION_RESULT", "$TARGET_CARD_ID"]
                    ]
                ]
            ]
        },
        "DO_SPAWN_LOCATION_SCN": {
            "args": ["$TARGET_NAME", "$TARGET_DATABASE_ID", "$LEFT", "$TOP"],
            "code": [
                ["DO_SPAWN_LOCATION", "$GAME.firstPlayer", "$TARGET_NAME", "$TARGET_DATABASE_ID", "$LEFT", "$TOP", true, null]
            ]
        },
        "DO_SPAWN_HIDDEN_AT_LOCATION": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD", "$LOG_EVENT", "$ACTOR_PLAYER"],
            "code": [
                ["DEFINE", "$DO_SPAWN_HIDDEN_AT_LOCATION_RESULT", null],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_PLAYER", null],
                        ["NOT_EQUAL", "$TARGET_CARD_ID", null],
                        ["NOT_EQUAL", "$LOCATION_CARD_NAME", null],
                        ["NOT_EQUAL", "$LEFT_MOD", null],
                        ["NOT_EQUAL", "$TOP_MOD", null]
                    ],
                    [
                        ["VAR", "$TARGET_CARD", "$CARD_BY_ID.$TARGET_CARD_ID"],
                        ["VAR", "$LOCATION_CARD", ["GET_NAMED_MAP_LOCATION", "$LOCATION_CARD_NAME"]],
                        ["COND",
                            ["AND",
                                ["NOT_EQUAL", "$TARGET_CARD", null],
                                ["NOT_EQUAL", "$LOCATION_CARD", null]
                            ],
                            [
                                ["DO_LOG", "$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "spawn {{$TARGET_CARD.sides.B.name}} at {{$LOCATION_CARD.currentFace.name}}.", "spawns {{$TARGET_CARD.sides.B.name}} at {{$LOCATION_CARD.currentFace.name}}."],
                                ["MOVE_CARD", "$TARGET_CARD.id", "sharedLocations", 0, 0, {"combine": false, "allowFlip": false}],
                                ["DO_SET_CARD_LOCATION", "$TARGET_CARD.id", ["ADD", ["GET_CARD_LEFT", "$LOCATION_CARD.id"], "$LEFT_MOD"], ["ADD", ["GET_CARD_TOP", "$LOCATION_CARD.id"], "$TOP_MOD"]],
                                ["DEFINE", "$DO_SPAWN_HIDDEN_AT_LOCATION_RESULT", "$TARGET_CARD.id"]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "DO_SPAWN_HIDDEN_AT_LOCATION_SCN": {
            "args": ["$TARGET_CARD_ID", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD"],
            "code": [
                ["DO_SPAWN_HIDDEN_AT_LOCATION", "$GAME.firstPlayer", "$TARGET_CARD_ID", "$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD", true, null]
            ]
        },
        "DO_SPAWN_MINI_INVESTIGATORS_AT_LOCATION": {
            "args": ["$LOCATION_CARD_NAME", "$LEFT_MOD", "$TOP_MOD", "$X_CHANGE", "$Y_CHANGE"],
            "code": [
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$LOCATION_CARD_NAME", null],
                        ["NOT_EQUAL", "$LEFT_MOD", null],
                        ["NOT_EQUAL", "$TOP_MOD", null],
                        ["NOT_EQUAL", "$X_CHANGE", null],
                        ["NOT_EQUAL", "$Y_CHANGE", null]
                    ],
                    [
                        ["VAR", "$LOCATION_CARD", ["GET_NAMED_MAP_LOCATION", "$LOCATION_CARD_NAME"]],
                        ["COND",
                            ["NOT_EQUAL", "$LOCATION_CARD", null],
                            [
                                ["VAR", "$X", ["ADD", ["GET_CARD_LEFT", "$LOCATION_CARD.id"], "$LEFT_MOD"]],
                                ["VAR", "$Y", ["ADD", ["GET_CARD_TOP", "$LOCATION_CARD.id"], "$TOP_MOD"]],
                                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                                    ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$PLAYER_I"]],
                                    ["COND",
                                        ["EQUAL", "$MINI_INVESTIGATOR", null],
                                        [
                                            ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$PLAYER_I"]],
                                            ["COND",
                                                ["NOT_EQUAL", "$INVESTIGATOR", null],
                                                [
                                                    ["DO_CREATE_CARDS", "$PLAYER_I", "{{$INVESTIGATOR.sides.A.name}}", "m{{$INVESTIGATOR.sides.A.databaseId}}", 1, ["GET_CONTROLLER_INVESTIGATOR", "$PLAYER_I"], false, null],
                                                    ["COND",
                                                        ["AND",
                                                            ["NOT_EQUAL", "$GAME.lastLoadedCardIds", null],
                                                            ["EQUAL", ["LENGTH", "$GAME.lastLoadedCardIds"], 1]
                                                        ],
                                                        [
                                                            ["VAR", "$MINI_INVESTIGATOR", "$CARD_BY_ID.{{$GAME.lastLoadedCardIds.[0]}}"],
                                                            ["SET", "/cardById/$MINI_INVESTIGATOR.id/currentSide", "A"],
                                                            ["SET", "/cardById/$MINI_INVESTIGATOR.id/eliminated", false],
                                                            ["COND",
                                                                ["NOT_EQUAL", "$PLAYER_DATA.$PLAYER_I.arkhamCustomSpawnLocation", null],
                                                                [
                                                                    ["VAR", "$CUSTOM_LOCATION_CARD", ["GET_NAMED_MAP_LOCATION", "$PLAYER_DATA.$PLAYER_I.arkhamCustomSpawnLocation"]],
                                                                    ["DO_LOG", true, null, "$PLAYER_I", "spawn {{$MINI_INVESTIGATOR.sides.A.name}} at {{$CUSTOM_LOCATION_CARD.currentFace.name}}.", "spawns {{$MINI_INVESTIGATOR.sides.A.name}} at {{$CUSTOM_LOCATION_CARD.currentFace.name}}."],
                                                                    ["MOVE_CARD", "$MINI_INVESTIGATOR.id", "sharedLocations", -1, 0],
                                                                    ["DO_SET_CARD_LOCATION", "$MINI_INVESTIGATOR.id", "$X", "$Y"],
                                                                    ["DO_MOVE_MINI_INVESTIGATOR_TO", "$PLAYER_I", "$CUSTOM_LOCATION_CARD.id", false]
                                                                ],
                                                                ["TRUE"],
                                                                [
                                                                    ["DO_LOG", true, null, "$PLAYER_I", "spawn {{$MINI_INVESTIGATOR.sides.A.name}} at {{$LOCATION_CARD.currentFace.name}}.", "spawns {{$MINI_INVESTIGATOR.sides.A.name}} at {{$LOCATION_CARD.currentFace.name}}."],
                                                                    ["MOVE_CARD", "$MINI_INVESTIGATOR.id", "sharedLocations", -1, 0],
                                                                    ["DO_SET_CARD_LOCATION", "$MINI_INVESTIGATOR.id", "$X", "$Y"],
                                                                    ["INCREASE_VAR", "$X", "$X_CHANGE"],
                                                                    ["INCREASE_VAR", "$Y", "$Y_CHANGE"]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "DO_SET_SPAWN_LOCATION": {
            "args": ["$DATABASE_ID", "$LEFT", "$TOP"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$DATABASE_ID", "DO_SET_SPAWN_LOCATION.DATABASE_ID"],
                ["VALIDATE_GT0", "$LEFT", "DO_SET_SPAWN_LOCATION.LEFT"],
                ["VALIDATE_GT0", "$TOP", "DO_SET_SPAWN_LOCATION.TOP"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_BY_DATABASE_ID", "$DATABASE_ID"]],
                ["COND",
                    ["NOT_EQUAL", "$TARGET_CARD", null],
                    [
                        ["SET", "/cardById/$TARGET_CARD.id/spawnLeft", "$LEFT"],
                        ["SET", "/cardById/$TARGET_CARD.id/spawnTop", "$TOP"]
                    ]
                ]
            ]
        },
        "DO_ATTACH_REFERENCE_TO_SCENARIO": {
            "args": ["$FLIP_FACEDOWN"],
            "code": [
                ["VALIDATE_BOOLEAN", "$FLIP_FACEDOWN", "DO_ATTACH_REFERENCE_TO_SCENARIO.FLIP_FACEDOWN"],
                ["VAR", "$SCENARIO_CARD", ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.currentFace.type", "Scenario"]]],
                ["VAR", "$REFERENCE_CARD", ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.currentFace.type", "Reference"]]],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$SCENARIO_CARD", null],
                        ["NOT_EQUAL", "$REFERENCE_CARD", null]
                    ],
                    [
                        ["DO_ATTACH_CARD", "$GAME.firstPlayer", "$REFERENCE_CARD.id", "$SCENARIO_CARD.id", true, null],
                        ["COND",
                            ["EQUAL", "$FLIP_FACEDOWN", true],
                            ["DO_FLIP_FACEDOWN", "$GAME.firstPlayer", "$REFERENCE_CARD.id", true, null]
                        ]
                    ]
                ]
            ]
        },
        "DO_ATTACH_REFERENCE_TO_ID": {
            "args": ["$DATABASE_ID", "$FLIP_FACEDOWN"],
            "code": [
                ["VALIDATE_BOOLEAN", "$FLIP_FACEDOWN", "DO_ATTACH_REFERENCE_TO_ID.FLIP_FACEDOWN"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_BY_DATABASE_ID", "$DATABASE_ID"]],
                ["VAR", "$REFERENCE_CARD", ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.currentFace.type", "Reference"]]],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_CARD", null],
                        ["NOT_EQUAL", "$REFERENCE_CARD", null]
                    ],
                    [
                        ["DO_ATTACH_CARD", "$GAME.firstPlayer", "$REFERENCE_CARD.id", "$TARGET_CARD.id", true, null],
                        ["COND",
                            ["EQUAL", "$FLIP_FACEDOWN", true],
                            ["DO_FLIP_FACEDOWN", "$GAME.firstPlayer", "$REFERENCE_CARD.id", true, null]
                        ]
                    ]
                ]
            ]
        },
        "DO_CREATE_DECK_CARD_SCN": {
            "args": ["$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_CREATE_DECK_CARD_SCN.TARGET_PLAYER"],
                ["VALIDATE_NOT_EMPTY", "$TARGET_NAME", "DO_CREATE_DECK_CARD_SCN.TARGET_NAME"],
                ["VALIDATE_NOT_EMPTY", "$TARGET_DATABASE_ID", "DO_CREATE_DECK_CARD_SCN.TARGET_DATABASE_ID"],
                ["DO_CREATE_CARDS", "$TARGET_PLAYER", "$TARGET_NAME", "$TARGET_DATABASE_ID", 1, ["GET_CONTROLLER_DECK", "$TARGET_PLAYER"], false, null],
                ["VAR", "$NEW_CARD_ID", "{{$GAME.lastLoadedCardIds.[0]}}"],
                ["DO_LOG", true, null, "$TARGET_PLAYER", "add {{$CARD_BY_ID.$NEW_CARD_ID.sides.A.name}} to their deck.", "adds {{$CARD_BY_ID.$NEW_CARD_ID.sides.A.name}} to their deck."],
                ["DO_SHUFFLE_GROUP", "$TARGET_PLAYER", ["GET_CONTROLLER_DECK", "$TARGET_PLAYER"], true, null]
            ]
        },
        "GET_RANDOM_WEAKNESS_DATABASE_ID": {
            "args": ["$FUNCTION_NAME"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$FUNCTION_NAME", "GET_RANDOM_WEAKNESS_DATABASE_ID.FUNCTION_NAME"],
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["IN_STRING", "$CARD.groupId", "player"],
                    ["IN_STRING", "$CARD.groupId", "Deck"]
                ]]],
                ["VAR", "$USED_SET_UUIDS", ["LIST", "core"]],
                ["VAR", "$USED_WEAKNESSES", ["LIST"]],
                ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                    ["COND",
                        ["NOT_EQUAL", ["IN_LIST", "$USED_SET_UUIDS", "$CARD.sides.A.setUuid"], true],
                        ["UPDATE_VAR", "$USED_SET_UUIDS", ["APPEND", "$USED_SET_UUIDS", "$CARD.sides.A.setUuid"]]
                    ],
                    ["COND",
                        ["AND",
                            ["EQUAL", "$CARD.sides.A.subtype", "Basic Weakness"],
                            ["NOT_EQUAL", "$CARD.sides.A.name", "Random Basic Weakness"]
                        ],
                        ["UPDATE_VAR", "$USED_WEAKNESSES", ["APPEND", "$USED_WEAKNESSES", "$CARD.sides.A.databaseId"]]
                    ]
                ]],
                ["VAR", "$AVAILABLE_WEAKNESSES", ["LIST"]],
                ["FOR_EACH_VAL", "$SET_UUID", "$USED_SET_UUIDS", [
                    ["VAR", "$MAP_RESULT", ["MAP", ["LIST", "$SET_UUID"], "$FUNCTION_NAME"]],
                    ["VAR", "$SET_WEAKNESSES", "$MAP_RESULT.[0]"],
                    ["FOR_EACH_VAL", "$WEAKNESS_ID", "$SET_WEAKNESSES", [
                        ["UPDATE_VAR", "$AVAILABLE_WEAKNESSES", ["APPEND", "$AVAILABLE_WEAKNESSES", "$WEAKNESS_ID"]]
                    ]]
                ]],
                ["FOR_EACH_VAL", "$WEAKNESS_ID", "$USED_WEAKNESSES", [
                    ["UPDATE_VAR", "$AVAILABLE_WEAKNESSES", ["REMOVE_FIRST_FROM_LIST_BY_VALUE", "$AVAILABLE_WEAKNESSES", "$WEAKNESS_ID"]]
                ]],
                ["AT_INDEX", "$AVAILABLE_WEAKNESSES", ["RANDOM_INT", 0, ["LENGTH", "$AVAILABLE_WEAKNESSES"]]]
            ]
        },
        "SCENARIO_INIT": {
            "args": ["$CHAOS_BAG_CAMPAIGN_NAME", "$CAMPAIGN_NAME", "$SCENARIO_NAME", "$SCENARIO_ACTION"],
            "code": [
                ["VAR", "$PRESENT_INVESTIGATORS", 0],
                ["VAR", "$PRESENT_DECKS", 0],
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["VAR", "$INVESTIGATOR_I", ["GET_INVESTIGATOR", "$PLAYER_I"]],
                    ["COND",
                        ["NOT_EQUAL", "$INVESTIGATOR_I", null],
                        ["INCREASE_VAR", "$PRESENT_INVESTIGATORS", 1]
                    ],
                    ["VAR", "$PLAYER_I_DECK", ["GET_CONTROLLER_DECK", "$PLAYER_I"]],
                    ["COND",
                        ["GREATER_THAN", ["LENGTH", "$GROUP_BY_ID.$PLAYER_I_DECK.stackIds"], 20],
                        ["INCREASE_VAR", "$PRESENT_DECKS", 1]
                    ]
                ]],
                ["COND",
                    ["AND",
                        ["EQUAL", "$PRESENT_INVESTIGATORS", "$GAME.numPlayers"],
                        ["EQUAL", "$PRESENT_DECKS", "$GAME.numPlayers"]
                    ],
                    [
                        ["SET", "/arkhamScenarioInit", true],
                        ["SET", "/arkhamChaosBagCampaignName", "$CHAOS_BAG_CAMPAIGN_NAME"],
                        ["SET", "/arkhamCampaignName", "$CAMPAIGN_NAME"],
                        ["SET", "/arkhamScenarioName", "$SCENARIO_NAME"],
                        ["SET", "/arkhamScenarioAction", "$SCENARIO_ACTION"],
                        ["SET", "/arkhamScenarioDifficulty", "Normal"],
                        ["SET", "/arkhamNumScenarioQuestions", 0],
                        ["SET", "/arkhamScenarioQuestionIndex", 0],
                        ["SET", "/arkhamNumPlayers", "$GAME.numPlayers"],
                        ["SET", "/arkhamTraumaDone", 0],
                        ["SET", "/arkhamStartingHandDone", 0],
                        ["SET", "/arkhamActiveInvestigator", null],
                        ["SET", "/arkhamSkipShufflingEncounterDeck", false],
                        ["SET", "/arkhamSkipShufflingSharedDeckA", false],
                        ["SET", "/arkhamSkipShufflingSharedDeckB", false],
                        ["SET", "/arkhamSkipShufflingSharedDeckC", false],
                        ["SET", "/arkhamFinalScenarioMessage", null],
                        ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$GAME.firstPlayer"]],
                        ["LOG", "└── {{$ALIAS_N}} initializes {{$GAME.arkhamScenarioName}} scenario with {{$GAME.arkhamNumPlayers}} player(s) and ", ["GET_ALIAS", "$GAME.firstPlayer"], "'s {{$INVESTIGATOR.currentFace.name}} as the lead investigator."],
                        ["DO_UPDATE_LEAD_INVESTIGATOR_TOKEN"],
                        ["DO_UPDATE_INVESTIGATOR_NAMES"],
                        ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                            ["SET", "/playerData/$PLAYER_I/arkhamPlayerId", "$PLAYER_I"],
                            ["SET", "/playerData/$PLAYER_I/arkhamBonusCharges", 0],
                            ["SET", "/playerData/$PLAYER_I/arkhamStartingResources", 5],
                            ["SET", "/playerData/$PLAYER_I/arkhamCustomDraw", false],
                            ["SET", "/playerData/$PLAYER_I/arkhamCustomSpawnLocation", null],
                            ["SET", "/playerData/$PLAYER_I/arkhamEventPutCardsIntoPlay", 0],
                            ["SET", "/playerData/$PLAYER_I/arkhamEventCustomDraw", 0],
                            ["VAR", "$INVESTIGATOR_I", ["GET_INVESTIGATOR", "$PLAYER_I"]],
                            ["SET", "/cardById/$INVESTIGATOR_I.id/eliminated", false],
                            ["VAR", "$PLAYER_I_DECK", ["GET_CONTROLLER_DECK", "$PLAYER_I"]],
                            ["VAR", "$PLAYER_I_ALIAS", ["GET_ALIAS", "$PLAYER_I"]],
                            ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                                ["EQUAL", "$CARD.groupId", "$PLAYER_I_DECK"],
                                ["EQUAL", "$CARD.sides.A.subtype", "Basic Weakness"],
                                ["EQUAL", "$CARD.sides.A.name", "Random Basic Weakness"]
                            ]]],
                            ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                                ["LOG", "└── Replacing Random Basic Weakness in {{$PLAYER_I_ALIAS}}'s deck."],
                                ["DELETE_CARD", "$CARD.id"],
                                ["DO_CREATE_CARDS", "$PLAYER_I", "random Basic Weakness", ["GET_RANDOM_WEAKNESS_DATABASE_ID", "GET_LIST_OF_WEAKNESSES"], 1, "$PLAYER_I_DECK", false, null]
                            ]],
                            ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                                ["OR",
                                    ["EQUAL", "$CARD.groupId", "$PLAYER_I_DECK"],
                                    ["EQUAL", "$CARD.id", "$INVESTIGATOR_I.id"]
                                ],
                                ["EQUAL", "$CARD.sides.A.hasBonded", true]
                            ]]],
                            ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                                ["DO_SPAWN_BONDED" , "$CARD.sides.A.databaseId", "$PLAYER_I"]
                            ]],
                            ["INCREASE_VAL", "/playerData/$PLAYER_I/arkhamEventPutCardsIntoPlay", 1],
                            ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                                ["EQUAL", "$CARD.groupId", "$PLAYER_I_DECK"],
                                ["EQUAL", "$CARD.sides.A.type", "Key"]
                            ]]],
                            ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                                ["ATTACH_CARD", "$CARD.id", "$INVESTIGATOR_I.id"]
                            ]],
                            ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                                ["EQUAL", "$CARD.groupId", "$PLAYER_I_DECK"],
                                ["EQUAL", "$CARD.sides.A.permanent", true]
                            ]]],
                            ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                                ["MOVE_CARD", "$CARD.id", ["GET_CONTROLLER_PLAY", "$PLAYER_I"], -1]
                            ]]
                        ]],
                        ["PROMPT", "$PLAYER_ORDER", "startingPhysicalTrauma"]
                    ],
                    ["TRUE"],
                    ["LOG", "└── Not all players have loaded their investigators and/or decks."]
                ]
            ]
        },
        "PLACE_STARTING_DAMAGE_ON_INVESTIGATOR": {
            "args": ["$NUMBER_OF_TOKENS"],
            "code": [
                ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$PLAYER_N"]],
                ["COND",
                    ["GREATER_THAN", "$NUMBER_OF_TOKENS", 0],
                    ["DO_PLACE_DAMAGE_ON_CARD", "$PLAYER_N", "$INVESTIGATOR.id", "$NUMBER_OF_TOKENS", true, "$PLAYER_N"],
                    ["TRUE"],
                    ["DO_LOG", true, "$PLAYER_N", "$PLAYER_N", "declare no physical trauma of {{$INVESTIGATOR.currentFace.name}}.", "declares no physical trauma of {{$INVESTIGATOR.currentFace.name}}."]
                ],
                ["PROMPT", "$PLAYER_N", "startingMentalTrauma"]
            ]
        },
        "PLACE_STARTING_HORROR_ON_INVESTIGATOR": {
            "args": ["$NUMBER_OF_TOKENS"],
            "code": [
                ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$PLAYER_N"]],
                ["COND",
                    ["GREATER_THAN", "$NUMBER_OF_TOKENS", 0],
                    ["DO_PLACE_HORROR_ON_CARD", "$PLAYER_N", "$INVESTIGATOR.id", "$NUMBER_OF_TOKENS", true, "$PLAYER_N"],
                    ["TRUE"],
                    ["DO_LOG", true, "$PLAYER_N", "$PLAYER_N", "declare no mental trauma of {{$INVESTIGATOR.currentFace.name}}.", "declares no mental trauma of {{$INVESTIGATOR.currentFace.name}}."]
                ],
                ["INCREASE_VAL", "/arkhamTraumaDone", 1],
                ["COND",
                    ["GREATER_EQUAL", "$GAME.arkhamTraumaDone", "$GAME.numPlayers"],
                    ["PROMPT", "$GAME.firstPlayer", "chooseScenarioDifficulty"]
                ]
            ]
        },
        "SET_SCENARIO_DIFFICULTY": {
            "args": ["$DIFFICULTY_NAME"],
            "code": [
                ["LOG", "{{$ALIAS_N}} sets scenario difficulty to {{$DIFFICULTY_NAME}}."],
                ["SET", "/arkhamScenarioDifficulty", "$DIFFICULTY_NAME"],
                ["DO_LOAD_CARDS", "$GAME.firstPlayer", "{{$GAME.arkhamChaosBagCampaignName}} Chaos Bag - {{$DIFFICULTY_NAME}}", true, null],
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["DRAW_STARTING_HAND", "$PLAYER_I"]
                ]]
            ]
        },
        "DRAW_STARTING_HAND": {
            "args": ["$PLAYER_I"],
            "code": [
                ["COND",
                    ["EQUAL", "$PLAYER_DATA.$PLAYER_I.resources", 0],
                    ["DO_GAIN_RESOURCES", "$PLAYER_I", "$PLAYER_DATA.$PLAYER_I.arkhamStartingResources", true, null]
                ],
                ["COND",
                    ["EQUAL", "$PLAYER_DATA.$PLAYER_I.arkhamCustomDraw", true],
                    ["INCREASE_VAL", "/playerData/$PLAYER_I/arkhamEventCustomDraw", 1],
                    ["TRUE"],
                    [
                        ["COND",
                            ["EQUAL", ["GET_ALL_CARDS_IN_GROUP_COUNT", ["GET_CONTROLLER_HAND", "$PLAYER_I"]], 0],
                            [
                                ["DO_SHUFFLE_GROUP", "$PLAYER_I", ["GET_CONTROLLER_DECK", "$PLAYER_I"], true, null],
                                ["DO_DRAW_CARDS_EXT", "$PLAYER_I", ["GET_CONTROLLER_DECK", "$PLAYER_I"], 5, true, true, null]
                            ]
                        ],
                        ["PROMPT", "$PLAYER_I", "decideAboutMulligan"]
                    ]
                ]
            ]
        },
        "DRAW_MULLIGAN_HAND": {
            "args": ["$DO_MULLIGAN"],
            "code": [
                ["VAR", "$SELECTED_CARDS", ["GET_TARGETED_CARDS_IN_GROUP", ["GET_CONTROLLER_HAND", "$PLAYER_N"], "$PLAYER_N"]],
                ["DO_CLEAR_TARGETED_FROM_LIST", "$SELECTED_CARDS", "$PLAYER_N"],
                ["COND",
                    ["AND",
                        ["EQUAL", "$DO_MULLIGAN", true],
                        ["GREATER_THAN", ["LENGTH", "$SELECTED_CARDS"], 0]
                    ],
                    [
                        ["DO_LOG", true, "$PLAYER_N", "$PLAYER_N", "take a mulligan.", "takes a mulligan."],
                        ["DO_DRAW_CARDS_EXT", "$PLAYER_N", ["GET_CONTROLLER_DECK", "$PLAYER_N"], ["LENGTH", "$SELECTED_CARDS"], true, true, null],
                        ["DO_SHUFFLE_LIST_INTO_GROUP", "$PLAYER_N", "$SELECTED_CARDS", ["GET_CONTROLLER_DECK", "$PLAYER_N"], true, null]
                    ],
                    ["TRUE"],
                    ["DO_LOG", true, "$PLAYER_N", "$PLAYER_N", "do not take a mulligan.", "does not take a mulligan."]
                ],
                ["STARTING_HAND_DONE"]
            ]
        },
        "STARTING_HAND_DONE": {
            "args": [],
            "code": [
                ["INCREASE_VAL", "/arkhamStartingHandDone", 1],
                ["COND",
                    ["GREATER_EQUAL", "$GAME.arkhamStartingHandDone", "$GAME.numPlayers"],
                    ["COND",
                        ["NOT_EQUAL", "$GAME.arkhamScenarioAction", null],
                        ["ACTION_LIST", "$GAME.arkhamScenarioAction"],
                        ["TRUE"],
                        ["SCENARIO_INIT_FINISH", null]
                    ]
                ]
            ]
        },
        "ADD_SCENARIO_QUESTION": {
            "args": ["$MESSAGE", "$LIST_OF_QUESTIONS"],
            "code": [
                ["SET", "/arkhamScenarioQuestion{{$GAME.arkhamNumScenarioQuestions}}", "$MESSAGE"],
                ["SET", "/arkhamScenarioQuestionList{{$GAME.arkhamNumScenarioQuestions}}", "$LIST_OF_QUESTIONS"],
                ["INCREASE_VAL", "/arkhamNumScenarioQuestions", 1]
            ]
        },
        "SCENARIO_INIT_CONTINUE": {
            "args": ["$NEXT_SCENARIO_ACTION"],
            "code": [
                ["SET", "/arkhamScenarioAction", "$NEXT_SCENARIO_ACTION"],
                ["SHOW_SCENARIO_QUESTION_PROMPT", null]
            ]
        },
        "ASK_SCENARIO_QUESTION_AND_CONTINUE": {
            "args": ["$MESSAGE", "$LIST_OF_QUESTIONS", "$NEXT_SCENARIO_ACTION"],
            "code": [
                ["ADD_SCENARIO_QUESTION", "$MESSAGE", "$LIST_OF_QUESTIONS"],
                ["SCENARIO_INIT_CONTINUE", "$NEXT_SCENARIO_ACTION"]
            ]
        },
        "SHOW_SCENARIO_QUESTION_PROMPT": {
            "args": ["$DUMMY"],
            "code": [
                ["COND",
                    ["LESS_THAN", "$GAME.arkhamScenarioQuestionIndex", "$GAME.arkhamNumScenarioQuestions"],
                    [
                        ["PROMPT", "$GAME.firstPlayer", "scenarioQuestion", "$GAME.arkhamScenarioQuestion{{$GAME.arkhamScenarioQuestionIndex}}"],
                        ["VAR", "$INDEX", 0],
                        ["FOR_EACH_VAL", "$QUESTION_I", "$GAME.arkhamScenarioQuestionList{{$GAME.arkhamScenarioQuestionIndex}}", [
                            ["VAR", "$LETTER", ["SUBSTRING", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "$INDEX", 1]],
                            ["PROMPT_ADD_OPTION", "$GAME.firstPlayer", "$QUESTION_I", "{{$LETTER}}", ["LIST", "SCENARIO_QUESTION_ANSWER", "{{$LETTER}}"]],
                            ["INCREASE_VAR", "$INDEX", 1]
                        ]]
                    ],
                    ["TRUE"],
                    ["COND",
                        ["NOT_EQUAL", "$GAME.arkhamScenarioAction", null],
                        ["ACTION_LIST", "$GAME.arkhamScenarioAction"],
                        ["TRUE"],
                        ["SCENARIO_INIT_FINISH", null]
                    ]
                ]
            ]
        },
        "SCENARIO_QUESTION_ANSWER": {
            "args": ["$QUESTION_ANSWER"],
            "code": [
                ["INCREASE_VAL", "/arkhamScenarioQuestionIndex", 1],
                ["LOG", "{{$ALIAS_N}} picks option {{$QUESTION_ANSWER}} in scenario question {{$GAME.arkhamScenarioQuestionIndex}}."],
                ["SET", "/arkhamScenarioAnswer{{$GAME.arkhamScenarioQuestionIndex}}", "$QUESTION_ANSWER"],
                ["SHOW_SCENARIO_QUESTION_PROMPT", null]
            ]
        },
        "SCENARIO_SKIP_QUESTION": {
            "args": ["$NEXT_SCENARIO_ACTION"],
            "code": [
                ["SET", "/arkhamScenarioQuestion{{$GAME.arkhamNumScenarioQuestions}}", "dummy"],
                ["SET", "/arkhamScenarioQuestionList{{$GAME.arkhamNumScenarioQuestions}}", ["LIST", "dummy", "dummy"]],
                ["INCREASE_VAL", "/arkhamNumScenarioQuestions", 1],
                ["SET", "/arkhamScenarioAction", "$NEXT_SCENARIO_ACTION"],
                ["INCREASE_VAL", "/arkhamScenarioQuestionIndex", 1],
                ["SET", "/arkhamScenarioAnswer{{$GAME.arkhamScenarioQuestionIndex}}", "A"],
                ["SHOW_SCENARIO_QUESTION_PROMPT", null]
            ]
        },
        "SCENARIO_INIT_RESOURCES": {
            "args": [],
            "code": [
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.inPlay", true],
                    ["EQUAL", "$CARD.usesPlaced", false],
                    ["GREATER_THAN", ["GET_CARD_USES", "$CARD.id"], 0]
                ]]],
                ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                    ["DO_PLACE_RESOURCES_ON_CARD", ["GET_PLAYER_CONTROLLER", "$GAME.firstPlayer", "$CARD.id"], "$CARD.id", ["GET_CARD_USES", "$CARD.id"], true, null],
                    ["SET", "/cardById/$CARD.id/usesPlaced", true]
                ]]
            ]
        },
        "SCENARIO_INIT_CLUES": {
            "args": [],
            "code": [
                ["VAR", "$SELECTED_CARDS", ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.inPlay", true],
                    ["EQUAL", "$CARD.cluesPlaced", false],
                    ["EQUAL", "$CARD.currentFace.type", "Location"],
                    ["EQUAL", "$CARD.groupId", "sharedLocations"],
                    ["NOT_EQUAL", "$CARD.currentFace.clues", null],
                    ["GREATER_THAN", "$CARD.currentFace.clues", 0]
                ]]],
                ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                    ["DO_PLACE_CLUES_ON_CARD", ["GET_PLAYER_CONTROLLER", "$GAME.firstPlayer", "$CARD.id"], "$CARD.id", ["GET_CARD_CLUES_REQUIREMENT", "$CARD.id"], true, null],
                    ["SET", "/cardById/$CARD.id/cluesPlaced", true]
                ]]
            ]
        },
        "SCENARIO_INIT_FINISH": {
            "args": ["$DUMMY"],
            "code": [
                ["COND",
                    ["EQUAL", "$GAME.arkhamSkipShufflingEncounterDeck", false],
                    ["DO_SHUFFLE_GROUP", "$GAME.firstPlayer", "sharedEncounterDeck", true, null]
                ],
                ["COND",
                    ["EQUAL", "$GAME.arkhamSkipShufflingSharedDeckA", false],
                    ["DO_SHUFFLE_GROUP", "$GAME.firstPlayer", "sharedDeckA", true, null]
                ],
                ["COND",
                    ["EQUAL", "$GAME.arkhamSkipShufflingSharedDeckB", false],
                    ["DO_SHUFFLE_GROUP", "$GAME.firstPlayer", "sharedDeckB", true, null]
                ],
                ["COND",
                    ["EQUAL", "$GAME.arkhamSkipShufflingSharedDeckC", false],
                    ["DO_SHUFFLE_GROUP", "$GAME.firstPlayer", "sharedDeckC", true, null]
                ],
                ["SET", "/roundNumber", 1],
                ["SET", "/stepId", "I1"],
                ["SET", "/arkhamScenarioInit", false],
                ["DO_REFRESH_ALL_STORIES_IN_PLAY"],
                ["SCENARIO_INIT_RESOURCES"],
                ["SCENARIO_INIT_CLUES"],
                ["COND",
                    ["EQUAL", "$GAME.arkhamFinalScenarioMessage", null],
                    ["LOG", "└── Game begins with the Investigation phase. Adjust the Chaos Bag to match your Campaign."],
                    ["TRUE"],
                    ["LOG", "└── Game begins with the Investigation phase. Adjust the Chaos Bag to match your Campaign. {{$GAME.arkhamFinalScenarioMessage}}"]
                ]
            ]
        }
    },
    "prompts": {
        "startingPhysicalTrauma": {
            "args": [],
            "message": "State the physical trauma of your investigator.",
            "options": [
                {
                    "label": "0",
                    "hotkey": "0",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 0]
                    ]
                },
                {
                    "label": "1",
                    "hotkey": "1",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 1]
                    ]
                },
                {
                    "label": "2",
                    "hotkey": "2",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 2]
                    ]
                },
                {
                    "label": "3",
                    "hotkey": "3",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 3]
                    ]
                },
                {
                    "label": "4",
                    "hotkey": "4",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 4]
                    ]
                },
                {
                    "label": "5",
                    "hotkey": "5",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 5]
                    ]
                },
                {
                    "label": "6",
                    "hotkey": "6",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 6]
                    ]
                },
                {
                    "label": "7",
                    "hotkey": "7",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 7]
                    ]
                },
                {
                    "label": "8",
                    "hotkey": "8",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 8]
                    ]
                },
                {
                    "label": "9",
                    "hotkey": "9",
                    "code": [
                        ["PLACE_STARTING_DAMAGE_ON_INVESTIGATOR", 9]
                    ]
                }
            ]
        },
        "startingMentalTrauma": {
            "args": [],
            "message": "State the mental trauma of your investigator.",
            "options": [
                {
                    "label": "0",
                    "hotkey": "0",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 0]
                    ]
                },
                {
                    "label": "1",
                    "hotkey": "1",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 1]
                    ]
                },
                {
                    "label": "2",
                    "hotkey": "2",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 2]
                    ]
                },
                {
                    "label": "3",
                    "hotkey": "3",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 3]
                    ]
                },
                {
                    "label": "4",
                    "hotkey": "4",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 4]
                    ]
                },
                {
                    "label": "5",
                    "hotkey": "5",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 5]
                    ]
                },
                {
                    "label": "6",
                    "hotkey": "6",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 6]
                    ]
                },
                {
                    "label": "7",
                    "hotkey": "7",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 7]
                    ]
                },
                {
                    "label": "8",
                    "hotkey": "8",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 8]
                    ]
                },
                {
                    "label": "9",
                    "hotkey": "9",
                    "code": [
                        ["PLACE_STARTING_HORROR_ON_INVESTIGATOR", 9]
                    ]
                }
            ]
        },
        "chooseScenarioDifficulty": {
            "args": [],
            "message": "Choose {{$GAME.arkhamScenarioName}} difficulty.",
            "options": [
                {
                    "label": "Easy",
                    "hotkey": "E",
                    "code": [
                        ["SET_SCENARIO_DIFFICULTY", "Easy"]
                    ]
                },
                {
                    "label": "Normal",
                    "hotkey": "N",
                    "code": [
                        ["SET_SCENARIO_DIFFICULTY", "Normal"]
                    ]
                },
                {
                    "label": "Hard",
                    "hotkey": "H",
                    "code": [
                        ["SET_SCENARIO_DIFFICULTY", "Hard"]
                    ]
                },
                {
                    "label": "Expert",
                    "hotkey": "X",
                    "code": [
                        ["SET_SCENARIO_DIFFICULTY", "Expert"]
                    ]
                }
            ]
        },
        "decideAboutMulligan": {
            "args": [],
            "message": "Do you want to take a mulligan? Target cards in hand to mulligan.",
            "options": [
                {
                    "label": "Yes, mulligan targeted cards.",
                    "hotkey": "Y",
                    "code": [
                        ["DRAW_MULLIGAN_HAND", true]
                    ]
                },
                {
                    "label": "No",
                    "hotkey": "N",
                    "code": [
                        ["DRAW_MULLIGAN_HAND", false]
                    ]
                }
            ]
        },
        "scenarioQuestion": {
            "args": ["$MESSAGE"],
            "message": "{{$MESSAGE}}",
            "options": [
            ]
        }
    }
}