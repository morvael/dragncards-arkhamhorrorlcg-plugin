{
    "actionLists": {
        "viewCardInfo": [
            ["DO_VIEW_CARD_INFO", "$ACTIVE_CARD_ID"]
        ]
    },
    "automation": {
        "postNewGameActionList": [
            ["COND",
                ["NOT_EQUAL", "$GAME.arkhamPostNewGameDone", true],
                [
                    ["SET", "/arkhamPostNewGameDone", true],
                    ["SET", "/arkhamScenarioInit", true],
                    ["SET", "/arkhamCampaignName", "No Campaign"],
                    ["SET", "/arkhamScenarioName", "No Scenario"],
                    ["SET", "/arkhamScenarioDifficulty", "Normal"],
                    ["LOG", "Welcome to Arkham Horror. Set first player, load your decks, then load a scenario. Do not manipulate the board until the game begins."]
                ]
            ]
        ],
        "postSitDownActionList": [
            ["DO_UPDATE_INVESTIGATOR_NAMES"]
        ],
        "postLoadActionList": [
            ["SET", "/lastLoadedCardIds", "$GAME.loadedCardIds"]
        ],
        "gameRules": [
            {
                "_comment": "Game step helpers.",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": [
                    ["AND",
                        ["EQUAL", "$GAME.arkhamScenarioInit", false],
                        ["OR",
                            ["EQUAL", "$GAME.stepId", "M1"],
                            ["EQUAL", "$GAME.stepId", "M2"],
                            ["EQUAL", "$GAME.stepId", "M3"],
                            ["EQUAL", "$GAME.stepId", "M4"],
                            ["EQUAL", "$GAME.stepId", "I2"],
                            ["EQUAL", "$GAME.stepId", "I2.2"],
                            ["EQUAL", "$GAME.stepId", "E2"],
                            ["EQUAL", "$GAME.stepId", "E3"],
                            ["EQUAL", "$GAME.stepId", "U2"],
                            ["EQUAL", "$GAME.stepId", "U3"],
                            ["EQUAL", "$GAME.stepId", "U4"],
                            ["EQUAL", "$GAME.stepId", "U5"]
                        ]
                    ]
                ],
                "then": [
                    ["COND",
                        ["EQUAL", "$GAME.stepId", "M1"],
                        ["DO_STEP_M1"],
                        ["EQUAL", "$GAME.stepId", "M2"],
                        ["DO_STEP_M2"],
                        ["EQUAL", "$GAME.stepId", "M3"],
                        ["DO_STEP_M3"],
                        ["EQUAL", "$GAME.stepId", "M4"],
                        ["DO_STEP_M4"],
                        ["EQUAL", "$GAME.stepId", "I2"],
                        ["DO_STEP_I2"],
                        ["EQUAL", "$GAME.stepId", "I2.2"],
                        ["DO_STEP_I2_2"],
                        ["EQUAL", "$GAME.stepId", "E2"],
                        ["DO_STEP_E2"],
                        ["EQUAL", "$GAME.stepId", "E3"],
                        ["DO_STEP_E3"],
                        ["EQUAL", "$GAME.stepId", "U2"],
                        ["DO_STEP_U2"],
                        ["EQUAL", "$GAME.stepId", "U3"],
                        ["DO_STEP_U3"],
                        ["EQUAL", "$GAME.stepId", "U4"],
                        ["DO_STEP_U4"],
                        ["EQUAL", "$GAME.stepId", "U5"],
                        ["DO_STEP_U5"]
                    ]
                ]
            },
            {
                "_comment": "Owner and controller initialization. Includes flipping facedown of Scenario Reference and double-sided Locations.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["EQUAL", "$TARGET.cardOwner", ""]
                ],
                "then": [
                    ["COND",
                        ["IN_STRING", "$TARGET.groupId", "player1"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player1"],
                        ["IN_STRING", "$TARGET.groupId", "player2"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player2"],
                        ["IN_STRING", "$TARGET.groupId", "player3"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player3"],
                        ["IN_STRING", "$TARGET.groupId", "player4"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player4"],
                        ["TRUE"],
                        [
                            ["SET", "/cardById/$TARGET.id/cardOwner", "shared"],
                            ["COND",
                                ["OR",
                                    ["EQUAL", "$TARGET.groupId", "sharedDeckA"],
                                    ["EQUAL", "$TARGET.groupId", "sharedDiscardA"]
                                ],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedDeckA"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedDiscardA"]
                                ],
                                ["OR",
                                    ["EQUAL", "$TARGET.groupId", "sharedDeckB"],
                                    ["EQUAL", "$TARGET.groupId", "sharedDiscardB"]
                                ],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedDeckB"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedDiscardB"]
                                ],
                                ["OR",
                                    ["EQUAL", "$TARGET.groupId", "sharedDeckC"],
                                    ["EQUAL", "$TARGET.groupId", "sharedDiscardC"]
                                ],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedDeckC"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedDiscardC"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileA"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileA"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileA"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileB"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileB"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileB"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileC"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileC"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileC"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileD"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileD"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileD"]
                                ]
                            ],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$GAME.arkhamScenarioInit", true],
                                    ["EQUAL", "$TARGET.sides.A.type", "Scenario"],
                                    ["EQUAL", "$TARGET.sides.B.type", "Scenario"],
                                    ["EQUAL", "$TARGET.currentSide", "A"],
                                    ["OR",
                                        ["EQUAL", "$GAME.arkhamScenarioDifficulty", "Hard"],
                                        ["EQUAL", "$GAME.arkhamScenarioDifficulty", "Expert"]
                                    ]
                                ],
                                ["SET", "/cardById/$TARGET.id/currentSide", "B"]
                            ],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$GAME.arkhamScenarioInit", true],
                                    ["EQUAL", "$TARGET.sides.A.type", "Location"],
                                    ["EQUAL", "$TARGET.sides.B.type", "Location"],
                                    ["EQUAL", "$TARGET.currentSide", "A"],
                                    ["EQUAL", "$TARGET.sides.B.clues", null],
                                    ["EQUAL", "$TARGET.sides.B.shroud", null]
                                ],
                                ["SET", "/cardById/$TARGET.id/currentSide", "B"]
                            ]
                        ]
                    ],
                    ["SET", "/cardById/$TARGET.id/controller", "$CARD_BY_ID.{{$TARGET.id}}.cardOwner"]
                ]
            },
            {
                "_comment": "Change controller.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["AND",
                        ["NOT_EQUAL", "$TARGET.controller", ""],
                        ["NOT_EQUAL", ["GET_DESIRED_CONTROLLER", "$TARGET.groupId"], null],
                        ["NOT_EQUAL", "$TARGET.controller", ["GET_DESIRED_CONTROLLER", "$TARGET.groupId"]]
                    ]
                ],
                "then": [
                    ["VAR", "$OLD_CONTROLLER", "$TARGET.controller"],
                    ["VAR", "$NEW_CONTROLLER", ["GET_DESIRED_CONTROLLER", "$TARGET.groupId"]],
                    ["COND",
                        ["OR",
                            ["NOT_EQUAL", "$OLD_CONTROLLER", "shared"],
                            ["EQUAL", "$TARGET.sides.B.name", "Player Card"]
                        ],
                        [
                            ["COND",
                                ["NOT_EQUAL", "$OLD_CONTROLLER", "shared"],
                                ["UPDATE_VAR", "$OLD_CONTROLLER", ["GET_ALIAS", "$OLD_CONTROLLER"]],
                                ["TRUE"],
                                ["UPDATE_VAR", "$OLD_CONTROLLER", "the scenario"]
                            ],
                            ["VAR", "$NEW_CONTROLLER_ORIG", "$NEW_CONTROLLER"],
                            ["COND",
                                ["NOT_EQUAL", "$NEW_CONTROLLER", "shared"],
                                ["UPDATE_VAR", "$NEW_CONTROLLER", ["GET_ALIAS", "$NEW_CONTROLLER"]],
                                ["TRUE"],
                                ["UPDATE_VAR", "$NEW_CONTROLLER", "the scenario"]
                            ],
                            ["LOG", "└── {{$TARGET.currentFace.name}} changes controller from {{$OLD_CONTROLLER}} to {{$NEW_CONTROLLER}}."],
                            ["SET", "/cardById/$TARGET.id/controller", "$NEW_CONTROLLER_ORIG"]
                        ]
                    ]
                ]
            },
            {
                "_comment": "Change inPlay.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["NOT_EQUAL", "$TARGET.inPlay", ["GET_DESIRED_IN_PLAY", "$TARGET.groupId"]]
                ],
                "then": [
                    ["SET", "/cardById/$TARGET.id/inPlay", ["GET_DESIRED_IN_PLAY", "$TARGET.groupId"]]
                ]
            },
            {
                "_comment": "Change inAdvanced.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["NOT_EQUAL", "$TARGET.inAdvanced", ["GET_DESIRED_IN_ADVANCED", "$TARGET.groupId"]]
                ],
                "then": [
                    ["SET", "/cardById/$TARGET.id/inAdvanced", ["GET_DESIRED_IN_ADVANCED", "$TARGET.groupId"]]
                ]
            },
            {
                "_comment": "Change attachedCount.",
                "type": "trigger",
                "listenTo": ["/cardById/*/parentCardId"],
                "condition": [
                    ["NOT_EQUAL", ["PREV", "$TARGET.parentCardId"], "$TARGET.parentCardId"]
                ],
                "then": [
                    ["VAR", "$OLD_PARENT_ID", ["PREV", "$TARGET.parentCardId"]],
                    ["COND",
                        ["AND",
                            ["NOT_EQUAL", "$OLD_PARENT_ID", null],
                            ["NOT_EQUAL", "$OLD_PARENT_ID", ""],
                            ["NOT_EQUAL", "$OLD_PARENT_ID", "$TARGET.id"]
                        ],
                        ["DECREASE_VAL", "/cardById/$OLD_PARENT_ID/attachedCount", 1]
                    ],
                    ["VAR", "$NEW_PARENT_ID", "$TARGET.parentCardId"],
                    ["COND",
                        ["AND",
                            ["NOT_EQUAL", "$NEW_PARENT_ID", null],
                            ["NOT_EQUAL", "$NEW_PARENT_ID", ""],
                            ["NOT_EQUAL", "$NEW_PARENT_ID", "$TARGET.id"]
                        ],
                        ["INCREASE_VAL", "/cardById/$NEW_PARENT_ID/attachedCount", 1]
                    ]
                ]
            },
            {
                "_comment": "Change inHand and type.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["NOT_EQUAL", "$TARGET.inHand", ["GET_DESIRED_IN_HAND", "$TARGET.groupId"]]
                ],
                "then": [
                    ["COND",
                        ["GET_DESIRED_IN_HAND", "$TARGET.groupId"],
                        [
                            ["SET", "/cardById/$TARGET.id/inHand", true],
                            ["COND",
                                ["EQUAL", "$TARGET.sides.B.databaseId", null],
                                ["SET", "/cardById/$TARGET.id/sides/B/type", "$TARGET.sides.A.type"]
                            ]
                        ],
                        ["TRUE"],
                        [
                            ["SET", "/cardById/$TARGET.id/inHand", false],
                            ["COND",
                                ["EQUAL", "$TARGET.sides.B.databaseId", null],
                                ["SET", "/cardById/$TARGET.id/sides/B/type", null]
                            ]
                        ]
                    ]
                ]
            },
            {
                "_comment": "Pay resource cost.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["AND",
                        ["EQUAL", "$GAME.arkhamScenarioInit", false],
                        ["EQUAL", "$TARGET.sides.B.name", "Player Card"],
                        ["NOT_EQUAL", "$TARGET.currentFace.cost", null],
                        ["GREATER_THAN", "$TARGET.currentFace.cost", 0],
                        ["EQUAL", ["GET_GROUP_IN_PLAY", "$TARGET.groupId"], true],
                        ["EQUAL", ["GET_GROUP_IN_PLAY", ["PREV", "$TARGET.groupId"]], false]
                    ]
                ],
                "then": [
                    ["LOG", "zonk1 {{$TARGET.sides.B.name}} {{$TARGET.currentFace.cost}}"],
                    ["VAR", "$TARGET_PLAYER", ["GET_PLAYER_CONTROLLER", "$PLAYER_N", "$TARGET.id"]],
                    ["COND",
                        ["GREATER_EQUAL", "$PLAYER_DATA.$TARGET_PLAYER.resources", "$TARGET.currentFace.cost"],
                        ["PROMPT", "$TARGET_PLAYER", "askToPayCost", "$TARGET.id", "$TARGET.currentFace.cost"],
                        ["TRUE"],
                        ["LOG", "└── ", ["GET_ALIAS", "$TARGET_PLAYER"], " skips spending {{$TARGET.currentFace.cost}} resource token(s) for {{$TARGET.currentFace.name}}."]
                    ]
                ]
            },
            {
                "_comment": "Add Uses resource tokens (1).",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["AND",
                        ["NOT_EQUAL", "$TARGET.currentFace.uses", null],
                        ["GREATER_THAN", "$TARGET.currentFace.uses", 0],
                        ["EQUAL", ["GET_GROUP_IN_PLAY", "$TARGET.groupId"], true],
                        ["EQUAL", ["GET_GROUP_IN_PLAY", ["PREV", "$TARGET.groupId"]], false],
                        ["EQUAL", ["GET_RESOURCES_ON_CARD", "$TARGET.id"], 0]
                    ]
                ],
                "then": [
                    ["PROMPT", "$PLAYER_N", "askToPlaceResources", "$TARGET.id", "$TARGET.currentFace.uses"]
                ]
            },
            {
                "_comment": "Add Uses resource tokens (2).",
                "type": "trigger",
                "listenTo": ["/cardById/*/currentSide"],
                "condition": [
                    ["AND",
                        ["NOT_EQUAL", "$TARGET.currentFace.uses", null],
                        ["GREATER_THAN", "$TARGET.currentFace.uses", 0],
                        ["EQUAL", ["GET_GROUP_IN_PLAY", "$TARGET.groupId"], true],
                        ["EQUAL", ["GET_RESOURCES_ON_CARD", "$TARGET.id"], 0]
                    ]
                ],
                "then": [
                    ["PROMPT", "$PLAYER_N", "askToPlaceResources", "$TARGET.id", "$TARGET.currentFace.uses"]
                ]
            },
            {
                "_comment": "Add Location clue tokens (1).",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["AND",
                        ["EQUAL", "$GAME.arkhamScenarioInit", false],
                        ["EQUAL", "$TARGET.currentFace.type", "Location"],
                        ["NOT_EQUAL", "$TARGET.currentFace.clues", null],
                        ["GREATER_THAN", "$TARGET.currentFace.clues", 0],
                        ["EQUAL", "$TARGET.groupId", "sharedLocations"],
                        ["NOT_EQUAL", ["PREV", "$TARGET.groupId"], "sharedLocations"],
                        ["EQUAL", ["GET_CLUES_ON_CARD", "$TARGET.id"], 0]
                    ]
                ],
                "then": [
                    ["PROMPT", "$PLAYER_N", "askToPlaceClues", "$TARGET.id", ["GET_CARD_CLUES_REQUIREMENT", "$TARGET.id"]]
                ]
            },
            {
                "_comment": "Add Location clue tokens (2).",
                "type": "trigger",
                "listenTo": ["/cardById/*/currentSide"],
                "condition": [
                    ["AND",
                        ["EQUAL", "$TARGET.currentFace.type", "Location"],
                        ["NOT_EQUAL", "$TARGET.currentFace.clues", null],
                        ["GREATER_THAN", "$TARGET.currentFace.clues", 0],
                        ["EQUAL", "$TARGET.groupId", "sharedLocations"],
                        ["EQUAL", ["GET_CLUES_ON_CARD", "$TARGET.id"], 0]
                    ]
                ],
                "then": [
                    ["PROMPT", "$PLAYER_N", "askToPlaceClues", "$TARGET.id", ["GET_CARD_CLUES_REQUIREMENT", "$TARGET.id"]]
                ]
            },
            {
                "_comment": "Make the Lead Investigator token follow first player (and create it when missing).",
                "type": "trigger",
                "listenTo": ["/firstPlayer"],
                "condition": [
                    ["NOT_EQUAL", ["PREV", "$GAME.firstPlayer"], "$GAME.firstPlayer"]
                ],
                "then": [
                    ["DO_UPDATE_LEAD_INVESTIGATOR_TOKEN"]
                ]
            }
        ]
    },
    "functions": {
        "GET_GROUP_IN_PLAY": {
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["AND",
                    ["NOT_EQUAL", "$TARGET_GROUP_ID", null],
                    ["NOT_EQUAL", "$TARGET_GROUP_ID", ""],
                    ["GET_DESIRED_IN_PLAY", "$TARGET_GROUP_ID"]
                ]
            ]
        },
        "GET_DESIRED_IN_PLAY": {
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "GET_DESIRED_IN_PLAY.TARGET_GROUP_ID"]],
                ["OR",
                    ["IN_STRING", "$TARGET_GROUP.groupType", "inPlay"],
                    ["IN_STRING", "$TARGET_GROUP.groupType", "story"]
                ]
            ]
        },
        "GET_DESIRED_IN_ADVANCED": {
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "GET_DESIRED_IN_ADVANCED.TARGET_GROUP_ID"]],
                ["EQUAL", "$TARGET_GROUP.canHaveAttachments", true]
            ]
        },
        "GET_DESIRED_IN_HAND": {
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "GET_DESIRED_IN_HAND.TARGET_GROUP_ID"]],
                ["EQUAL", "$TARGET_GROUP.groupType", "hand"]
            ]
        },
        "GET_DESIRED_CONTROLLER": {
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$TARGET_GROUP_ID", "GET_DESIRED_CONTROLLER.TARGET_GROUP_ID"],
                ["COND",
                    ["OR",
                        ["EQUAL", "$TARGET_GROUP_ID", "sharedLocations"],
                        ["EQUAL", "$TARGET_GROUP_ID", "sharedVoid"],
                        ["EQUAL", "$TARGET_GROUP_ID", "sharedOffMap"]
                    ],
                    null,
                    ["IN_STRING", "$TARGET_GROUP_ID", "player1"],
                    "player1",
                    ["IN_STRING", "$TARGET_GROUP_ID", "player2"],
                    "player2",
                    ["IN_STRING", "$TARGET_GROUP_ID", "player3"],
                    "player3",
                    ["IN_STRING", "$TARGET_GROUP_ID", "player4"],
                    "player4",
                    ["TRUE"],
                    "shared"
                ]
            ]
        },
        "GET_CONTROLLER_INVESTIGATOR": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_INVESTIGATOR.CONTROLLER"],
                "{{$CONTROLLER}}Investigator"
            ]
        },
        "GET_CONTROLLER_PLAY": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_PLAY.CONTROLLER"],
                "{{$CONTROLLER}}Play"
            ]
        },
        "GET_CONTROLLER_THREAT": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_THREAT.CONTROLLER"],
                "{{$CONTROLLER}}Threat"
            ]
        },
        "GET_CONTROLLER_HAND": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_HAND.CONTROLLER"],
                "{{$CONTROLLER}}Hand"
            ]
        },
        "GET_CONTROLLER_DECK": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_DECK.CONTROLLER"],
                ["COND",
                    ["EQUAL", "$CONTROLLER", "shared"],
                    "sharedEncounterDeck",
                    ["TRUE"],
                    "{{$CONTROLLER}}Deck"
                ]
            ]
        },
        "GET_CONTROLLER_DISCARD": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_DISCARD.CONTROLLER"],
                ["COND",
                    ["EQUAL", "$CONTROLLER", "shared"],
                    "sharedEncounterDiscard",
                    ["TRUE"],
                    "{{$CONTROLLER}}Discard"
                ]
            ]
        },
        "GET_CONTROLLER_REMOVED": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_REMOVED.CONTROLLER"],
                "{{$CONTROLLER}}Removed"
            ]
        },
        "GET_CONTROLLER_EXILED": {
            "args": ["$CONTROLLER"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$CONTROLLER", "GET_CONTROLLER_EXILED.CONTROLLER"],
                "{{$CONTROLLER}}Exiled"
            ]
        },
        "GET_PLAYER_CONTROLLER": {
            "args": ["$TARGET_PLAYER", "$TARGET_CARD_ID"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "GET_PLAYER_CONTROLLER.TARGET_PLAYER"],
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "GET_PLAYER_CONTROLLER.TARGET_CARD_ID"]],
                ["COND",
                    ["EQUAL", "$TARGET_CARD.controller", "shared"],
                    "$TARGET_PLAYER",
                    ["TRUE"],
                    "$TARGET_CARD.controller"
                ]
            ]
        },
        "DO_STEP_M1": {
            "args": [],
            "code": [
                ["LOG", "└── Round number advances."],
                ["INCREASE_VAL", "/roundNumber", 1]
            ]
        },
        "DO_STEP_M2": {
            "args": [],
            "code": [
                ["PROMPT", "$GAME.firstPlayer", "askToPlaceDoomOnCurrentAgenda"]
            ]
        },
        "DO_STEP_M3": {
            "args": [],
            "code": [
                ["VAR", "$CURRENT_AGENDA", ["GET_CURRENT_AGENDA"]],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$CURRENT_AGENDA", null],
                        ["EQUAL", "$CURRENT_AGENDA.currentFace.type", "Agenda"],
                        ["EQUAL", "$CURRENT_AGENDA.currentSide", "A"]
                    ],
                    [
                        ["VAR", "$DOOM_REQUIRED", ["GET_CARD_DOOM_REQUIREMENT", "$CURRENT_AGENDA.id"]],
                        ["VAR", "$DOOM_ACCRUED", ["GET_DOOM_ACCRUED"]],
                        ["COND",
                            ["AND",
                                ["GREATER_THAN", "$DOOM_REQUIRED", 0],
                                ["GREATER_EQUAL", "$DOOM_ACCRUED", "$DOOM_REQUIRED"]
                            ],
                            [
                                ["LOG", "└── {{$CURRENT_AGENDA.currentFace.name}} requires {{$DOOM_REQUIRED}} doom to advance. Doom on cards in play: {{$DOOM_ACCRUED}}."],
                                ["DO_ADVANCE_STORY", "$GAME.firstPlayer", "sharedAgendaStory", true, null]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "DO_STEP_M4": {
            "args": [],
            "code": [
                ["PROMPT", "$GAME.firstPlayer", "askToDrawEncounterCard"]
            ]
        },
        "DO_STEP_I2": {
            "args": [],
            "code": [
                ["VAR", "$REMAINING", ["LENGTH", ["GET_ACTIVE_MINI_INVESTIGATORS"]]],
                ["COND",
                    ["GREATER_THAN", "$REMAINING", 0],
                    ["LOG", "└── ", ["GET_NUMERIC_LOG", "There is ", "There are ", "$REMAINING", " investigator left who didn't take their turn yet", " investigators left who didn't take their turn yet"], "."],
                    ["TRUE"],
                    ["SET", "/stepId", "I3"]
                ]
            ]
        },
        "DO_STEP_I2_2": {
            "args": [],
            "code": [
                ["COND",
                    ["NOT_EQUAL", "$GAME.arkhamActiveInvestigator", null],
                    ["DO_END_INVESTIGATOR_TURN", "$GAME.arkhamActiveInvestigator", true, "$PLAYER_N"]
                ],
                ["COND",
                    ["GREATER_THAN", ["LENGTH", ["GET_ACTIVE_MINI_INVESTIGATORS"]], 0],
                    ["SET", "/stepId", "I2"],
                    ["TRUE"],
                    ["SET", "/stepId", "I3"]
                ]
            ]
        },
        "DO_STEP_E2": {
            "args": [],
            "code": [
                ["COND",
                    ["GREATER_THAN", ["GET_READY_ENEMIES_COUNT"], 0],
                    ["LOG", "└── Hunter or Patrol enemies move."]
                ]
            ]
        },
        "DO_STEP_E3": {
            "args": [],
            "code": [
                ["COND",
                    ["GREATER_THAN", ["GET_READY_ENEMIES_COUNT"], 0],
                    ["LOG", "└── Engaged enemies attack."]
                ]
            ]
        },
        "DO_STEP_U2": {
            "args": [],
            "code": [
                ["LOG", "└── Actions are reset."],
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$PLAYER_I"]],
                    ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$PLAYER_I"]],
                    ["COND",
                        ["AND",
                            ["NOT_EQUAL", "$INVESTIGATOR", null],
                            ["NOT_EQUAL", "$INVESTIGATOR.eliminated", true],
                            ["NOT_EQUAL", "$MINI_INVESTIGATOR", null]
                        ],
                        [
                            ["UNSET", "/cardById/$INVESTIGATOR.id/borderColor"],
                            ["UNSET", "/cardById/$MINI_INVESTIGATOR.id/borderColor"],
                            ["SET", "/cardById/$MINI_INVESTIGATOR.id/currentSide", "A"]
                        ]
                    ]
                ]],
                ["SET", "/arkhamActiveInvestigator", null]
            ]
        },
        "DO_STEP_U3": {
            "args": [],
            "code": [
                ["PROMPT", "$GAME.firstPlayer", "askToReadyAllCards"]
            ]
        },
        "DO_STEP_U4": {
            "args": [],
            "code": [
                ["PROMPT", "$GAME.firstPlayer", "askToDrawPlayerCard"]
            ]
        },
        "DO_STEP_U5": {
            "args": [],
            "code": [
                ["DO_CHECK_HAND_SIZE", "$GAME.firstPlayer"]
            ]
        },
        "DO_CHECK_HAND_SIZE": {
            "args": ["$TARGET_PLAYER"],
            "code": [
                ["COND",
                    ["NOT_EQUAL", "$TARGET_PLAYER", null],
                    [
                        ["VALIDATE_PLAYER", "$TARGET_PLAYER", "DO_CHECK_HAND_SIZE.TARGET_PLAYER"],
                        ["VAR", "$HAND_ID", ["GET_CONTROLLER_HAND", "$TARGET_PLAYER"]],
                        ["VAR", "$CARDS_IN_HAND", ["GET_ALL_CARDS_IN_GROUP_COUNT", "$HAND_ID"]],
                        ["COND",
                            ["GREATER_THAN", "$CARDS_IN_HAND", 8],
                            [
                                ["VAR", "$CARDS_TO_DISCARD", ["SUBTRACT", "$CARDS_IN_HAND", 8]],
                                ["PROMPT", "$TARGET_PLAYER", "askToDiscardExcessCards", "$CARDS_TO_DISCARD"]
                            ],
                            ["TRUE"],
                            ["DO_CHECK_HAND_SIZE", ["GET_NEXT_ACTIVE_PLAYER", "$TARGET_PLAYER"]]
                        ]
                    ]
                ]
            ]
        },
        "DO_UPDATE_LEAD_INVESTIGATOR_TOKEN": {
            "args": [],
            "code": [
                ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$GAME.firstPlayer"]],
                ["COND",
                    ["NOT_EQUAL", "$INVESTIGATOR", null],
                    [
                        ["VAR", "$LEAD_INVESTIGATOR_TOKEN", ["GET_LEAD_INVESTIGATOR_TOKEN"]],
                        ["COND",
                            ["EQUAL", "$LEAD_INVESTIGATOR_TOKEN", null],
                            [
                                ["DO_CREATE_CARDS", "$GAME.firstPlayer", "Lead investigator Token", "first_investigator", 1, "sharedTokens", true, null],
                                ["UPDATE_VAR", "$LEAD_INVESTIGATOR_TOKEN", ["GET_LEAD_INVESTIGATOR_TOKEN"]]
                            ]
                        ],
                        ["COND",
                            ["NOT_EQUAL", "$INVESTIGATOR.id", "$LEAD_INVESTIGATOR_TOKEN.parentCardId"],
                            ["LOG", "└── ", ["GET_ALIAS", "$GAME.firstPlayer"], " attaches {{$LEAD_INVESTIGATOR_TOKEN.currentFace.name}} to {{$INVESTIGATOR.currentFace.name}}."],
                            ["ATTACH_CARD", "$LEAD_INVESTIGATOR_TOKEN.id", "$INVESTIGATOR.id"]
                        ]
                    ]
                ]
            ]
        },
        "DO_UPDATE_INVESTIGATOR_NAMES": {
            "args": [],
            "code": [
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["VAR", "$ALIAS_I", ["GET_ALIAS", "$PLAYER_I"]],
                    ["VAR", "$ALIAS_I", ["SUBSTRING", "$ALIAS_I", 7, ["SUBTRACT", ["LENGTH", "$ALIAS_I"], 8]]],
                    ["SET", "/groupById/{{$PLAYER_I}}Investigator/tableLabel", "$ALIAS_I"]
                ]]
            ]
        },
        "DO_APPEND_CARD_INFO": {
            "args": ["$TEXT"],
            "code": [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$TEXT}}"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]
        },
        "DO_VIEW_CARD_INFO": {
            "args": ["$TARGET_CARD_ID"],
            "code": [
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_VIEW_CARD_INFO.TARGET_CARD_ID"]],
                ["VAR", "$MESSAGE", "{{$TARGET_CARD.currentFace.name}} [{{$TARGET_CARD.id}}]"],
                ["VAR", "$SEPARATOR", " is "],
                ["COND",
                    ["OR",
                        ["EQUAL", "$TARGET_CARD.cardOwner", null],
                        ["EQUAL", "$TARGET_CARD.cardOwner", ""]
                    ],
                    ["DO_APPEND_CARD_INFO", "not owned by anyone"],
                    ["EQUAL", "$TARGET_CARD.cardOwner", "shared"],
                    ["DO_APPEND_CARD_INFO", "owned by the scenario"],
                    ["TRUE"],
                    ["DO_APPEND_CARD_INFO", ["JOIN_STRING", "owned by ", ["GET_ALIAS", "$TARGET_CARD.cardOwner"]]]
                ],
                ["COND",
                    ["OR",
                        ["EQUAL", "$TARGET_CARD.controller", null],
                        ["EQUAL", "$TARGET_CARD.controller", ""]
                    ],
                    ["DO_APPEND_CARD_INFO", "not controlled by anyone"],
                    ["EQUAL", "$TARGET_CARD.controller", "shared"],
                    ["DO_APPEND_CARD_INFO", "controlled by the scenario"],
                    ["TRUE"],
                    ["DO_APPEND_CARD_INFO", ["JOIN_STRING", "controlled by ", ["GET_ALIAS", "$TARGET_CARD.controller"]]]
                ],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$TARGET_CARD.cardDeck", null],
                        ["NOT_EQUAL", "$TARGET_CARD.cardDeck", ""]
                    ],
                    ["DO_APPEND_CARD_INFO", ["JOIN_STRING", "having source in ", "$GROUP_BY_ID.{{$TARGET_CARD.cardDeck}}.label"]]
                ],
                ["LOG", "└── {{$MESSAGE}}."]
            ]
        },
        "GET_NEXT_ACTIVE_PLAYER": {
            "args": ["$TARGET_PLAYER"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "GET_NEXT_ACTIVE_PLAYER.TARGET_PLAYER"],
                ["VAR", "$NEXT_PLAYER", ["NEXT_PLAYER", "$TARGET_PLAYER"]],
                ["WHILE",
                    ["AND",
                        ["NOT_EQUAL", "$NEXT_PLAYER", "$TARGET_PLAYER"],
                        ["NOT_EQUAL", "$NEXT_PLAYER", "$GAME.firstPlayer"],
                        ["EQUAL", ["GET_PLAYER_ELIMINATED", "$NEXT_PLAYER"], true]
                    ],
                    ["UPDATE_VAR", "$NEXT_PLAYER", ["NEXT_PLAYER", "$NEXT_PLAYER"]]
                ],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$NEXT_PLAYER", "$TARGET_PLAYER"],
                        ["NOT_EQUAL", "$NEXT_PLAYER", "$GAME.firstPlayer"]
                    ],
                    "$NEXT_PLAYER",
                    ["TRUE"],
                    null
                ]
            ]
        },
        "PROMPT_NEXT_ACTIVE_PLAYER": {
            "args": ["$TARGET_PLAYER", "$PROMPT_NAME", "$FOLLOWUP_PROMPT"],
            "code": [
                ["VALIDATE_PLAYER", "$TARGET_PLAYER", "PROMPT_NEXT_ACTIVE_PLAYER.TARGET_PLAYER"],
                ["VALIDATE_NOT_EMPTY", "$PROMPT_NAME", "PROMPT_NEXT_ACTIVE_PLAYER.PROMPT_NAME"],
                ["VAR", "$NEXT_PLAYER", ["GET_NEXT_ACTIVE_PLAYER", "$TARGET_PLAYER"]],
                ["COND",
                    ["NOT_EQUAL", "$NEXT_PLAYER", null],
                    ["PROMPT", "$NEXT_PLAYER", "$PROMPT_NAME"],
                    ["NOT_EQUAL", "$FOLLOWUP_PROMPT", null],
                    ["PROMPT", "$GAME.firstPlayer", "$FOLLOWUP_PROMPT"],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        }
    },
    "labels": {
        "viewCardInfoMenu": {
            "English": "Info"
        }
    }
}