{
    "automation": {
        "postNewGameActionList": [
            ["SET", "/arkhamScenarioInit", true],
            ["LOG", "└── Welcome to Arkham Horror. Set first player, load your decks, then load a scenario. Do not manipulate the board until the game begins."],
            ["SET_LAYOUT", "shared", "layout3Player"],
            ["SET", "/numPlayers", 3],
            ["LOAD_CARDS", "Roland Banks Starter Deck"],
            ["DEFINE", "$PLAYER_N", "player2"],
            ["LOAD_CARDS", "Daisy Walker Starter Deck"],
            ["DEFINE", "$PLAYER_N", "player3"],
            ["LOAD_CARDS", "Agnes Baker Starter Deck"],
            ["DEFINE", "$PLAYER_N", "player1"],            
            ["LOAD_CARDS", "The Midnight Masks Scenario"]
        ],
        "gameRules": [
            {
                "_comment": "Game step helpers.",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": [
                    ["OR",
                        ["EQUAL", "$GAME.stepId", "M1"],
                        ["EQUAL", "$GAME.stepId", "M2"],
                        ["EQUAL", "$GAME.stepId", "U3"],
                        ["EQUAL", "$GAME.stepId", "U4"]
                    ]
                ],
                "then": [
                    ["COND",
                        ["EQUAL", "$GAME.stepId", "M1"],
                        [
                            ["LOG", "└── Round number advances."],
                            ["INCREASE_VAL", "/roundNumber", 1]
                        ],
                        ["EQUAL", "$GAME.stepId", "M2"],
                        ["PLACE_DOOM_ON_CURRENT_AGENDA", 1],
                        ["EQUAL", "$GAME.stepId", "U3"],
                        [
                            ["LOG", "└── Each exhausted card readies."],
                            ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$CARD_BY_ID", [
                                ["READY_CARD", "$CARD", false]
                            ]]
                        ],
                        ["EQUAL", "$GAME.stepId", "U4"],
                        [
                            ["LOG", "└── Each investigator draws 1 card."],
                            ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                                ["COND",
                                    ["NOT_EQUAL", "$GAME.playerData.$PLAYER_I.eliminated", true],
                                    ["DRAW_CARD", 1, "$PLAYER_I"]
                                ]
                            ]],
                            ["LOG", "└── Each investigator gains 1 resource."],
                            ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                                ["COND",
                                    ["NOT_EQUAL", "$GAME.playerData.$PLAYER_I.eliminated", true],
                                    ["INCREASE_VAL", "/playerData/$PLAYER_I/resources", 1]
                                ]
                            ]]
                        ]
                    ]
                ]
            },
            {
                "_comment": "Flip selected cards face up when entering play.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["AND",
                        ["EQUAL", "$GAME.groupById.{{$TARGET.groupId}}.groupType", "inPlay"],
                        ["NOT_EQUAL", ["PREV", "$GAME.groupById.{{$TARGET.groupId}}.groupType"], "inPlay"],
                        ["EQUAL", "$TARGET.currentSide", "B"],
                        ["OR",
                            ["EQUAL", "$TARGET.sides.B.databaseId", null],
                            ["EQUAL", "$TARGET.sides.A.type", "Investigator"],
                            ["EQUAL", "$TARGET.sides.A.type", "ChaosToken"],
                            ["EQUAL", "$TARGET.sides.A.type", "FirstInvestigatorToken"]
                        ],
                        ["NOT_EQUAL", "$TARGET.sides.A.type", "MiniConcealed"]
                    ]
                ],
                "then": [
                    ["SET", "/cardById/$TARGET.id/peeking/player1", false],
                    ["SET", "/cardById/$TARGET.id/peeking/player2", false],
                    ["SET", "/cardById/$TARGET.id/peeking/player3", false],
                    ["SET", "/cardById/$TARGET.id/peeking/player4", false],
                    ["SET", "/cardById/$TARGET.id/currentSide", "A"]
                ]
            },
            {
                "_comment": "Flip locations facedown when loading scenario.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["AND",
                        ["EQUAL", "$GAME.arkhamScenarioInit", true],
                        ["EQUAL", "$TARGET.sides.A.type", "Location"],
                        ["EQUAL", "$TARGET.sides.B.type", "Location"],
                        ["EQUAL", "$TARGET.currentSide", "A"],
                        ["EQUAL", "$TARGET.sides.B.clues", null],
                        ["EQUAL", "$TARGET.sides.B.shroud", null]
                    ]
                ],
                "then": [
                    ["SET", "/cardById/$TARGET.id/currentSide", "B"]
                ]
            },
            {
                "_comment": "Make the Lead Investigator token follow first player (and create it when missing).",
                "type": "trigger",
                "listenTo": ["/firstPlayer"],
                "condition": [
                    ["NOT_EQUAL", ["PREV", "$GAME.firstPlayer"], "$GAME.firstPlayer"]
                ],
                "then": [
                    ["UPDATE_LEAD_INVESTIGATOR_TOKEN", null]
                ]
            },
            {
                "_comment": "Make sure investigator group table labels show which player they belong to.",
                "type": "trigger",
                "listenTo": ["/playerData/*/alias"],
                "condition": [
                    ["FALSE"]
                ],
                "then": [
                    ["UPDATE_INVESTIGATOR_NAMES", null]
                ]
            }
        ]
    },
    "functions": {
        "UPDATE_LEAD_INVESTIGATOR_TOKEN": {
            "args": ["$DUMMY"],
            "code": [
                ["VAR", "$LEAD_INVESTIGATOR", ["ONE_CARD", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "{{$GAME.firstPlayer}}Investigator"],
                    ["EQUAL", "$CARD.sides.A.type", "Investigator"]
                ]]],
                ["COND",
                    ["NOT_EQUAL", "$LEAD_INVESTIGATOR", null],
                    [
                        ["VAR", "$LEAD_INVESTIGATOR_TOKEN", ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.sides.A.type", "FirstInvestigatorToken"]]],
                        ["COND",
                            ["EQUAL", "$LEAD_INVESTIGATOR_TOKEN", null],
                            [
                                ["CREATE_CARDS", "first_investigator", 1, "sharedTokens"],
                                ["UPDATE_VAR", "$LEAD_INVESTIGATOR_TOKEN", ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.sides.A.type", "FirstInvestigatorToken"]]]
                            ]
                        ],
                        ["COND",
                            ["NOT_EQUAL", "$LEAD_INVESTIGATOR.id", "$LEAD_INVESTIGATOR_TOKEN.parentCardId"],
                            [
                                ["LOG", "└── {{$LEAD_INVESTIGATOR_TOKEN.sides.A.name}} attached to {{$LEAD_INVESTIGATOR.sides.A.name}}."],
                                ["ATTACH_CARD", "$LEAD_INVESTIGATOR_TOKEN.id", "$LEAD_INVESTIGATOR.id"]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "UPDATE_INVESTIGATOR_NAMES": {
            "args": ["$DUMMY"],
            "code": [
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["VAR", "$ALIAS_I", ["GET_ALIAS", "$PLAYER_I"]],
                    ["VAR", "$ALIAS_I", ["SUBSTRING", "$ALIAS_I", 7, ["SUBTRACT", ["LENGTH", "$ALIAS_I"], 8]]],
                    ["SET", "/groupById/{{$PLAYER_I}}Investigator/tableLabel", "$ALIAS_I"]
                ]]
            ]
        }
    }
}