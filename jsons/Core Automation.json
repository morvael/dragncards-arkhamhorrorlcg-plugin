{
    "automation": {
        "postNewGameActionList": [
            ["COND",
                ["NOT_EQUAL", "$GAME.arkhamPostNewGameDone", true],
                [
                    ["SET", "/arkhamPostNewGameDone", true],
                    ["SET", "/arkhamScenarioInit", true],
                    ["SET", "/arkhamCampaignName", "No Campaign"],
                    ["SET", "/arkhamScenarioName", "No Scenario"],
                    ["SET", "/arkhamScenarioDifficulty", "Normal"],
                    ["LOG", "Welcome to Arkham Horror. Set first player, load your decks, then load a scenario. Do not manipulate the board until the game begins."]
                ]
            ]
        ],
        "postSitDownActionList": [
            ["DO_UPDATE_INVESTIGATOR_NAMES"]
        ],
        "gameRules": [
            {
                "_comment": "Game step helpers.",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": [
                    ["OR",
                        ["EQUAL", "$GAME.stepId", "M1"],
                        ["EQUAL", "$GAME.stepId", "M2"],
                        ["EQUAL", "$GAME.stepId", "U3"],
                        ["EQUAL", "$GAME.stepId", "U4"]
                    ]
                ],
                "then": [
                    ["COND",
                        ["EQUAL", "$GAME.stepId", "M1"],
                        ["DO_STEP_M1"],
                        ["EQUAL", "$GAME.stepId", "M2"],
                        ["DO_STEP_M2"],
                        ["EQUAL", "$GAME.stepId", "U3"],
                        ["DO_STEP_U3"],
                        ["EQUAL", "$GAME.stepId", "U4"],
                        ["DO_STEP_U4"]
                    ]
                ]
            },
            {
                "_comment": "Owner and controller initialization. Includes flipping facedown of Scenario Reference and double-sided Locations.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["EQUAL", "$TARGET.cardOwner", ""]
                ],
                "then": [
                    ["COND",
                        ["IN_STRING", "$TARGET.groupId", "player1"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player1"],
                        ["IN_STRING", "$TARGET.groupId", "player2"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player2"],
                        ["IN_STRING", "$TARGET.groupId", "player3"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player3"],
                        ["IN_STRING", "$TARGET.groupId", "player4"],
                        ["SET", "/cardById/$TARGET.id/cardOwner", "player4"],
                        ["TRUE"],
                        [
                            ["SET", "/cardById/$TARGET.id/cardOwner", "scenario"],
                            ["COND",
                                ["OR",
                                    ["EQUAL", "$TARGET.groupId", "sharedDeckA"],
                                    ["EQUAL", "$TARGET.groupId", "sharedDiscardA"]
                                ],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedDeckA"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedDiscardA"]
                                ],
                                ["OR",
                                    ["EQUAL", "$TARGET.groupId", "sharedDeckB"],
                                    ["EQUAL", "$TARGET.groupId", "sharedDiscardB"]
                                ],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedDeckB"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedDiscardB"]
                                ],
                                ["OR",
                                    ["EQUAL", "$TARGET.groupId", "sharedDeckC"],
                                    ["EQUAL", "$TARGET.groupId", "sharedDiscardC"]
                                ],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedDeckC"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedDiscardC"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileA"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileA"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileA"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileB"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileB"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileB"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileC"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileC"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileC"]
                                ],
                                ["EQUAL", "$TARGET.groupId", "sharedPileD"],
                                [
                                    ["SET", "/cardById/$TARGET.id/cardDeck", "sharedPileD"],
                                    ["SET", "/cardById/$TARGET.id/cardDiscard", "sharedPileD"]
                                ]
                            ],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$GAME.arkhamScenarioInit", true],
                                    ["EQUAL", "$TARGET.sides.A.type", "Scenario"],
                                    ["EQUAL", "$TARGET.sides.B.type", "Scenario"],
                                    ["EQUAL", "$TARGET.currentSide", "A"],
                                    ["OR",
                                        ["EQUAL", "$GAME.arkhamScenarioDifficulty", "Hard"],
                                        ["EQUAL", "$GAME.arkhamScenarioDifficulty", "Expert"]
                                    ]
                                ],
                                ["SET", "/cardById/$TARGET.id/currentSide", "B"]
                            ],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$GAME.arkhamScenarioInit", true],
                                    ["EQUAL", "$TARGET.sides.A.type", "Location"],
                                    ["EQUAL", "$TARGET.sides.B.type", "Location"],
                                    ["EQUAL", "$TARGET.currentSide", "A"],
                                    ["EQUAL", "$TARGET.sides.B.clues", null],
                                    ["EQUAL", "$TARGET.sides.B.shroud", null]
                                ],
                                ["SET", "/cardById/$TARGET.id/currentSide", "B"]
                            ]
                        ]
                    ],
                    ["SET", "/cardById/$TARGET.id/controller", "$CARD_BY_ID.{{$TARGET.id}}.cardOwner"]
                ]
            },
            {
                "_comment": "Change controller.",
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": [
                    ["AND",
                        ["NOT_EQUAL", "$TARGET.controller", ""],
                        ["NOT_EQUAL", ["GET_DESIRED_CONTROLLER", "$TARGET.groupId"], null],
                        ["NOT_EQUAL", "$TARGET.controller", ["GET_DESIRED_CONTROLLER", "$TARGET.groupId"]]
                    ]
                ],
                "then": [
                    ["VAR", "$OLD_CONTROLLER", "$TARGET.controller"],
                    ["VAR", "$NEW_CONTROLLER", ["GET_DESIRED_CONTROLLER", "$TARGET.groupId"]],
                    ["COND",
                        ["OR",
                            ["NOT_EQUAL", "$OLD_CONTROLLER", "scenario"],
                            ["EQUAL", "$TARGET.sides.B.name", "Player Card"]
                        ],
                        [
                            ["COND",
                                ["NOT_EQUAL", "$OLD_CONTROLLER", "scenario"],
                                ["UPDATE_VAR", "$OLD_CONTROLLER", ["GET_ALIAS", "$OLD_CONTROLLER"]]
                            ],
                            ["VAR", "$NEW_CONTROLLER_ORIG", "$NEW_CONTROLLER"],
                            ["COND",
                                ["NOT_EQUAL", "$NEW_CONTROLLER", "scenario"],
                                ["UPDATE_VAR", "$NEW_CONTROLLER", ["GET_ALIAS", "$NEW_CONTROLLER"]]
                            ],
                            ["LOG", "└── {{$TARGET.currentFace.name}} changes controller from {{$OLD_CONTROLLER}} to {{$NEW_CONTROLLER}}."],
                            ["SET", "/cardById/$TARGET.id/controller", "$NEW_CONTROLLER_ORIG"]
                        ]
                    ]
                ]
            },
            {
                "_comment": "Make the Lead Investigator token follow first player (and create it when missing).",
                "type": "trigger",
                "listenTo": ["/firstPlayer"],
                "condition": [
                    ["NOT_EQUAL", ["PREV", "$GAME.firstPlayer"], "$GAME.firstPlayer"]
                ],
                "then": [
                    ["DO_UPDATE_LEAD_INVESTIGATOR_TOKEN"]
                ]
            }
        ]
    },
    "functions": {
        "GET_DESIRED_CONTROLLER": {
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$TARGET_GROUP_ID", "GET_DESIRED_CONTROLLER.TARGET_GROUP_ID"],
                ["COND",
                    ["OR",
                        ["EQUAL", "$TARGET_GROUP_ID", "sharedLocations"],
                        ["EQUAL", "$TARGET_GROUP_ID", "sharedVoid"],
                        ["EQUAL", "$TARGET_GROUP_ID", "sharedOffMap"]
                    ],
                    null,
                    ["IN_STRING", "$TARGET_GROUP_ID", "player1"],
                    "player1",
                    ["IN_STRING", "$TARGET_GROUP_ID", "player2"],
                    "player2",
                    ["IN_STRING", "$TARGET_GROUP_ID", "player3"],
                    "player3",
                    ["IN_STRING", "$TARGET_GROUP_ID", "player4"],
                    "player4",
                    ["TRUE"],
                    "scenario"
                ]
            ]
        },
        "DO_STEP_M1": {
            "args": [],
            "code": [
                ["LOG", "└── Round number advances."],
                ["INCREASE_VAL", "/roundNumber", 1]
            ]
        },
        "DO_STEP_M2": {
            "args": [],
            "code": [
                ["DO_PLACE_DOOM_ON_CURRENT_AGENDA", "$GAME.firstPlayer", 1, true, null]
            ]
        },
        "DO_STEP_U3": {
            "args": [],
            "code": [
                ["PROMPT", "$GAME.firstPlayer", "askToReadyAllCards"]
            ]
        },
        "DO_STEP_U4": {
            "args": [],
            "code": [
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["COND",
                        ["NOT_EQUAL", "$PLAYER_DATA.$PLAYER_I.eliminated", true],
                        ["DO_DRAW_CARDS", "$PLAYER_I", "{{$PLAYER_I}}Deck", 1, true, "$PLAYER_I"]
                    ]
                ]],
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["COND",
                        ["NOT_EQUAL", "$PLAYER_DATA.$PLAYER_I.eliminated", true],
                        ["DO_GAIN_RESOURCES", "$PLAYER_I", 1, true, "$PLAYER_I"]
                    ]
                ]]
            ]
        },
        "DO_UPDATE_LEAD_INVESTIGATOR_TOKEN": {
            "args": [],
            "code": [
                ["VAR", "$INVESTIGATOR_CARD_ID", ["GET_INVESTIGATOR_CARD_ID", "$GAME.firstPlayer"]],
                ["COND",
                    ["NOT_EQUAL", "$INVESTIGATOR_CARD_ID", null],
                    [
                        ["VAR", "$LEAD_INVESTIGATOR_TOKEN_CARD_ID", ["GET_LEAD_INVESTIGATOR_TOKEN_CARD_ID"]],
                        ["COND",
                            ["EQUAL", "$LEAD_INVESTIGATOR_TOKEN_CARD_ID", null],
                            [
                                ["DO_CREATE_CARDS", "$GAME.firstPlayer", "Lead investigator Token", "first_investigator", 1, "sharedTokens", true, null],
                                ["UPDATE_VAR", "$LEAD_INVESTIGATOR_TOKEN_CARD_ID", ["GET_LEAD_INVESTIGATOR_TOKEN_CARD_ID"]]
                            ]
                        ],
                        ["COND",
                            ["NOT_EQUAL", "$INVESTIGATOR_CARD_ID", "$CARD_BY_ID.$LEAD_INVESTIGATOR_TOKEN_CARD_ID.parentCardId"],
                            ["DO_ATTACH_CARD", "$GAME.firstPlayer", "$LEAD_INVESTIGATOR_TOKEN_CARD_ID", "$INVESTIGATOR_CARD_ID", true, null]
                        ]
                    ]
                ]
            ]
        },
        "DO_UPDATE_INVESTIGATOR_NAMES": {
            "args": [],
            "code": [
                ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                    ["VAR", "$ALIAS_I", ["GET_ALIAS", "$PLAYER_I"]],
                    ["VAR", "$ALIAS_I", ["SUBSTRING", "$ALIAS_I", 7, ["SUBTRACT", ["LENGTH", "$ALIAS_I"], 8]]],
                    ["SET", "/groupById/{{$PLAYER_I}}Investigator/tableLabel", "$ALIAS_I"]
                ]]
            ]
        }
    }
}