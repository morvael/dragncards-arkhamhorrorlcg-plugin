{
    "actionLists": {
        "exhaust": [
            ["COND",
                ["AND", ["EQUAL", "$ACTIVE_CARD.rotation", 0], "$ACTIVE_CARD.inPlay"],
                [
                    ["LOG", "{{$ALIAS_N}} exhausted {{$ACTIVE_FACE.name}}."],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 90],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", true]
                ]
            ]
        ],
        "ready": [
            ["COND",
                ["AND", ["EQUAL", "$ACTIVE_CARD.rotation", 90], "$ACTIVE_CARD.inPlay"],
                [
                    ["LOG", "{{$ALIAS_N}} readied {{$ACTIVE_FACE.name}}."],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 0],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", false]
                ]
            ]
        ],
        "flipCard": [
            ["COND",
                ["EQUAL", "$ACTIVE_CARD.currentSide", "A"],
                [
                    ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} facedown."],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "B"]    
                ],
                true,
                [
                    ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"],
                    ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} faceup."]
                ]
            ]
        ],
        "discardCard": [
            ["COND",
                ["EQUAL", "$ACTIVE_CARD.cardIndex", 0],
                [
                    ["VAR", "$STACK_ID", ["GET_STACK_ID", "$ACTIVE_CARD.groupId", "$ACTIVE_CARD.stackIndex"]],
                    ["VAR", "$CARD_IDS", "$GAME.stackById.$STACK_ID.cardIds"],
                    ["FOR_EACH_VAL", "$CARD_ID", "$CARD_IDS",
                        [
                            ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
                            ["COND",
                                ["EQUAL", "$CARD.discardGroupId", null],
                                ["LOG", "{{$ALIAS_N}} failed to discard {{$CARD.currentFace.name}} because it is not associated with a discard pile. Please drag the card instead."],
                                true,
                                [
                                    ["VAR", "$CURRENT_SIDE", "$CARD.currentSide"],
                                    ["LOG", "{{$ALIAS_N}} discarded {{$CARD.sides.A.name}}."],
                                    ["MOVE_CARD", "$CARD_ID", "$CARD.discardGroupId", 0]
                                ]
                            ]
                        ]
                    ]
                ],
                true,
                [
                    ["COND",
                        ["EQUAL", "$ACTIVE_CARD.discardGroupId", null],
                        ["LOG", "{{$ALIAS_N}} failed to discard {{$ACTIVE_FACE.name}} because it is not associated with a discard pile. Please drag the card instead."],
                        true,
                        [
                            ["LOG", "{{$ALIAS_N}} discarded {{$ACTIVE_CARD.sides.A.name}}."],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.discardGroupId", 0]
                        ]
                    ]
                ]
            ]
        ],
        "shuffleIntoDeck": [
            ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.deckGroupId", 0],
            ["VAR", "$GROUP_ID", "$ACTIVE_CARD.deckGroupId"],
            ["SHUFFLE_GROUP", "$GROUP_ID"],
            ["LOG", "{{$ALIAS_N}} shuffled {{$ACTIVE_FACE.name}} into {{$GAME.groupById.$GROUP_ID.label}}."]
        ],
        "detach": [
            ["COND",
                ["GREATER_THAN", "$ACTIVE_CARD.cardIndex", 0],
                [
                    ["LOG", "{{$ALIAS_N}} detached {{$ACTIVE_FACE.name}}."],
                    ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.groupId", ["ADD", "$ACTIVE_CARD.stackIndex", 1]]
                ]
            ]
        ],
        "toggleSetAside": [
            ["COND",
                ["NOT_EQUAL", "$PLAYER_DATA.$PLAYER_N.viewingSetAside", true],
                [
                    ["LOG", "{{$ALIAS_N}} is looking at the set aside regions."],
                    ["SET", "/playerData/$PLAYER_N/viewingSetAside", true],
                    ["FOR_EACH_KEY_VAL", "$REGION_ID", "$REGION", "$GAME.layout.regions", [
                        ["COND",
                            ["EQUAL", "$REGION.layerIndex", 1],
                            ["SET", "/playerData/$PLAYER_N/layout/regions/$REGION_ID/visible", true]
                        ]
                    ]]
                ],
                ["TRUE"],
                [
                    ["LOG", "{{$ALIAS_N}} is no longer looking at the set aside regions."],
                    ["SET", "/playerData/$PLAYER_N/viewingSetAside", false],
                    ["FOR_EACH_KEY_VAL", "$REGION_ID", "$REGION", "$GAME.layout.regions", [
                        ["COND",
                            ["EQUAL", "$REGION.layerIndex", 1],
                            ["SET", "/playerData/$PLAYER_N/layout/regions/$REGION_ID/visible", false]
                        ]
                    ]]
                ]
            ]
        ],
        "advanceStory": [
            ["COND",
                ["AND",
                    ["EQUAL","$ACTIVE_GROUP.groupType", "story"],
                    ["GREATER_THAN", ["LENGTH", "$ACTIVE_GROUP.stackIds"], 0]
                ],
                [
                    ["VAR", "$ADVANCING_CARD", ["GET_CARD", "$ACTIVE_GROUP_ID", 0, 0]],
                    ["COND",
                        ["EQUAL", "$ADVANCING_CARD.currentSide", "A"],
                        [
                            ["LOG", "{{$ALIAS_N}} advanced {{$ADVANCING_CARD.sides.A.name}}."],
                            ["SET", "/cardById/$ADVANCING_CARD.id/currentSide", "B"]
                        ],
                        ["EQUAL", "$ADVANCING_CARD.currentSide", "B"],
                        [
                            ["LOG", "{{$ALIAS_N}} advanced {{$ADVANCING_CARD.sides.B.name}}."],
                            ["COND",
                                ["GREATER_THAN", ["LENGTH", "$ACTIVE_GROUP.stackIds"], 1],
                                ["MOVE_CARD", "$ADVANCING_CARD.id", "$ACTIVE_GROUP_ID", -1]
                            ],
                            ["SET", "/cardById/$ADVANCING_CARD.id/currentSide", "A"]
                        ]
                    ]
                ]
            ]
        ],
        "pickChaosToken": [
            ["COND",
                ["GREATER_THAN", ["LENGTH", "$GROUP_BY_ID.sharedChaosBag.stackIds"], 1],
                ["SHUFFLE_GROUP", "sharedChaosBag"]
            ],
            ["COND",
                ["GREATER_THAN", ["LENGTH", "$GROUP_BY_ID.sharedChaosBag.stackIds"], 0],
                [
                    ["VAR", "$PICKED_TOKEN", ["GET_CARD", "sharedChaosBag", 0, 0]],
                    ["SET", "/cardById/$PICKED_TOKEN.id/currentSide", "A"],
                    ["MOVE_CARD", "$PICKED_TOKEN.id", "sharedLocations", -1]
                ]
            ]
        ]
    }
}