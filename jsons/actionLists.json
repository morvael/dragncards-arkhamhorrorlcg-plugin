{
    "actionLists": {
        "exhaustCard": [
            ["COND",
                ["EQUAL", "$ACTIVE_FACE.type", "MiniInvestigator"],
                [
                    ["COND",
                        ["EQUAL", "$ACTIVE_CARD.currentSide", "A"],
                        [
                            ["LOG", "{{$ALIAS_N}} exhausted {{$ACTIVE_FACE.name}}."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "B"],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", true]
                        ]
                    ]
                ],
                ["TRUE"],
                [
                    ["COND",
                        ["EQUAL", "$ACTIVE_CARD.rotation", 0],
                        [
                            ["LOG", "{{$ALIAS_N}} exhausted {{$ACTIVE_FACE.name}}."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 90],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", true]
                        ]
                    ]
                ]
            ]
        ],
        "readyCard": [
            ["COND",
                ["EQUAL", "$ACTIVE_FACE.type", "MiniInvestigator"],
                [
                    ["COND",
                        ["NOT_EQUAL", "$ACTIVE_CARD.currentSide", "A"],
                        [
                            ["LOG", "{{$ALIAS_N}} readied {{$ACTIVE_FACE.name}}."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", false]
                        ]
                    ]
                ],
                ["TRUE"],
                [
                    ["COND",
                        ["NOT_EQUAL", "$ACTIVE_CARD.rotation", 0],
                        [
                            ["LOG", "{{$ALIAS_N}} readied {{$ACTIVE_FACE.name}}."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 0],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", false]
                        ]
                    ]
                ]
            ]
        ],
        "flipCard": [
            ["COND",
                ["EQUAL", "$ACTIVE_FACE.type", "MiniInvestigator"],
                [
                    ["COND",
                        ["EQUAL", "$ACTIVE_CARD.currentSide", "A"],
                        [
                            ["LOG", "{{$ALIAS_N}} exhausted {{$ACTIVE_FACE.name}}."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "B"],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", true]
                        ],
                        ["TRUE"],
                        [
                            ["LOG", "{{$ALIAS_N}} readied {{$ACTIVE_FACE.name}}."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", false]
                        ]
                    ]
                ],
                ["TRUE"],
                [
                    ["COND",
                        ["EQUAL", "$ACTIVE_CARD.currentSide", "A"],
                        [
                            ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} facedown."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "B"]
                        ],
                        ["TRUE"],
                        [
                            ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} faceup."],
                            ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"]
                        ]
                    ]
                ]
            ]
        ],
        "discardCard": [
            ["COND",
                ["OR",
                    ["EQUAL", "$ACTIVE_FACE.type", "Investigator"],
                    ["EQUAL", "$ACTIVE_FACE.type", "Scenario"],
                    ["EQUAL", "$ACTIVE_FACE.type", "Agenda"],
                    ["EQUAL", "$ACTIVE_FACE.type", "Act"],
                    ["EQUAL", "$ACTIVE_FACE.type", "Location"],
                    ["EQUAL", "$ACTIVE_FACE.type", "Story"],
                    ["EQUAL", "$ACTIVE_FACE.type", "MiniInvestigator"]
                ],
                ["LOG", "{{$ACTIVE_FACE.name}} cannot be discarded, {{$ALIAS_N}}."],
                ["OR",
                    ["EQUAL", "$ACTIVE_FACE.type", "FirstInvestigatorToken"],
                    ["EQUAL", "$ACTIVE_FACE.type", "KeyToken"],
                    ["EQUAL", "$ACTIVE_FACE.type", "FloodedToken"],
                    ["EQUAL", "$ACTIVE_FACE.type", "SealToken"]
                ],
                ["COND",
                    ["NOT_EQUAL", "$ACTIVE_CARD.groupId", "sharedTokens"],
                    [
                        ["LOG", "{{$ALIAS_N}} discarded {{$ACTIVE_FACE.name}}."],
                        ["MOVE_CARD", "$ACTIVE_CARD_ID", "sharedTokens", -1]
                    ],
                    ["TRUE"],
                    ["LOG", "{{$ACTIVE_FACE.name}} cannot be discarded from here, {{$ALIAS_N}}."]
                ],
                ["OR",
                    ["EQUAL", "$ACTIVE_FACE.type", "Key"],
                    ["EQUAL", "$ACTIVE_FACE.type", "MiniConcealed"]
                ],
                ["COND",
                    ["NOT_EQUAL", "$ACTIVE_CARD.groupId", "sharedNotInPlay"],
                    [
                        ["LOG", "{{$ALIAS_N}} removed {{$ACTIVE_FACE.name}} from play."],
                        ["MOVE_CARD", "$ACTIVE_CARD_ID", "sharedNotInPlay", -1]
                    ],
                    ["TRUE"],
                    ["LOG", "{{$ACTIVE_FACE.name}} cannot be removed from play from here, {{$ALIAS_N}}."]
                ],
                ["EQUAL", "$ACTIVE_FACE.type", "ChaosToken"],
                ["COND",
                    ["NOT_EQUAL", "$ACTIVE_CARD.groupId", "sharedChaosBag"],
                    ["COND",
                        ["OR",
                            ["EQUAL", "$ACTIVE_FACE.name", "Bless"],
                            ["EQUAL", "$ACTIVE_FACE.name", "Curse"]
                        ],
                        [
                            ["LOG", "{{$ALIAS_N}} removed {{$ACTIVE_FACE.name}} Chaos Token from play."],
                            ["DELETE_CARD", "$ACTIVE_CARD_ID"]
                        ],
                        ["TRUE"],
                        [
                            ["LOG", "{{$ALIAS_N}} discarded {{$ACTIVE_FACE.name}} Chaos Token."],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "sharedChaosBag", -1]
                        ]
                    ],
                    ["TRUE"],
                    ["LOG", "{{$ACTIVE_FACE.name}} Chaos Token cannot be removed or discarded from here, {{$ALIAS_N}}."]
                ],
                ["OR",
                    ["EQUAL", "$ACTIVE_CARD.inPlay", true],
                    ["EQUAL", "$ACTIVE_CARD.inHand", true]
                ],
                ["COND",
                    ["AND",
                        ["NOT_EQUAL", "$ACTIVE_CARD.sides.B.databaseId", null],
                        ["GREATER_THAN", "$ACTIVE_FACE.victoryPoints", 0]
                    ],
                    [
                        ["LOG", "{{$ALIAS_N}} moved {{$ACTIVE_FACE.name}} to Victory Display."],
                        ["MOVE_CARD", "$ACTIVE_CARD_ID", "sharedVictoryDisplay", -1]
                    ],
                    ["NOT_EQUAL", "$ACTIVE_CARD.sides.B.databaseId", null],
                    ["LOG", "{{$ACTIVE_FACE.name}} cannot be discarded, {{$ALIAS_N}}."],
                    ["GREATER_THAN", "$ACTIVE_FACE.victoryPoints", 0],
                    ["PROMPT", "$PLAYER_N", "victoryOrDiscard", "$ACTIVE_CARD"],
                    ["TRUE"],
                    [
                        ["LOG", "{{$ALIAS_N}} discarded {{$ACTIVE_FACE.name}}."],
                        ["COND",
                            ["EQUAL", "$ACTIVE_CARD.controller", "player1"],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "player1Discard", 0],
                            ["EQUAL", "$ACTIVE_CARD.controller", "player2"],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "player2Discard", 0],
                            ["EQUAL", "$ACTIVE_CARD.controller", "player3"],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "player3Discard", 0],
                            ["EQUAL", "$ACTIVE_CARD.controller", "player4"],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "player4Discard", 0],
                            ["TRUE"],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "sharedEncounterDiscard", 0]
                        ]
                    ]
                ],
                ["EQUAL", "$ACTIVE_CARD.inDeck", true],
                [
                    ["LOG", "{{$ALIAS_N}} discarded {{$ACTIVE_CARD.sides.A.name}} from the top of {{$ACTIVE_GROUP.label}}."],
                    ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.discardToPile", 0]
                ],
                ["TRUE"],
                ["LOG", "{{$ACTIVE_FACE.name}} cannot be discarded from here, {{$ALIAS_N}}."]
            ]
        ],
        "shuffleIntoDeck": [
            ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.deckGroupId", 0],
            ["VAR", "$GROUP_ID", "$ACTIVE_CARD.deckGroupId"],
            ["SHUFFLE_GROUP", "$GROUP_ID"],
            ["LOG", "{{$ALIAS_N}} shuffled {{$ACTIVE_FACE.name}} into {{$GAME.groupById.$GROUP_ID.label}}."]
        ],
        "advanceStory": [
            ["COND",
                ["AND",
                    ["EQUAL","$ACTIVE_GROUP.groupType", "story"],
                    ["GREATER_THAN", ["LENGTH", "$ACTIVE_GROUP.stackIds"], 0]
                ],
                [
                    ["VAR", "$ADVANCING_CARD", ["GET_CARD", "$ACTIVE_GROUP_ID", 0, 0]],
                    ["COND",
                        ["EQUAL", "$ADVANCING_CARD.currentSide", "A"],
                        [
                            ["LOG", "{{$ALIAS_N}} advanced {{$ADVANCING_CARD.sides.A.name}}."],
                            ["SET", "/cardById/$ADVANCING_CARD.id/currentSide", "B"]
                        ],
                        ["EQUAL", "$ADVANCING_CARD.currentSide", "B"],
                        [
                            ["LOG", "{{$ALIAS_N}} advanced {{$ADVANCING_CARD.sides.B.name}}."],
                            ["COND",
                                ["GREATER_THAN", ["LENGTH", "$ACTIVE_GROUP.stackIds"], 1],
                                ["MOVE_CARD", "$ADVANCING_CARD.id", "$ACTIVE_GROUP_ID", -1]
                            ],
                            ["SET", "/cardById/$ADVANCING_CARD.id/currentSide", "A"]
                        ]
                    ]
                ]
            ]
        ],
        "pickChaosToken": [
            ["COND",
                ["GREATER_THAN", ["LENGTH", "$GROUP_BY_ID.sharedChaosBag.stackIds"], 1],
                ["SHUFFLE_GROUP", "sharedChaosBag"]
            ],
            ["COND",
                ["GREATER_THAN", ["LENGTH", "$GROUP_BY_ID.sharedChaosBag.stackIds"], 0],
                [
                    ["VAR", "$PICKED_TOKEN", ["GET_CARD", "sharedChaosBag", 0, 0]],
                    ["LOG", "{{$ALIAS_N}} picked {{$PICKED_TOKEN.sides.A.name}} from the Chaos Bag."],
                    ["SET", "/cardById/$PICKED_TOKEN.id/currentSide", "A"],
                    ["MOVE_CARD", "$PICKED_TOKEN.id", "sharedVoid", 0]
                ],
                ["TRUE"],
                ["LOG", "Chaos Bag is empty, {{$ALIAS_N}}."]
            ]
        ],
        "scenarioToA": [
            ["VAR", "$MATCHED_CARD", ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.currentFace.type", "Scenario"]]],
            ["COND",
                ["AND",
                    ["NOT_EQUAL", "$MATCHED_CARD", null],
                    ["EQUAL", "$MATCHED_CARD.currentSide", "B"]
                ],
                [
                    ["LOG", "{{$ALIAS_N}} flipped {{$MATCHED_CARD.sides.B.name}} to Easy/Normal side."],
                    ["SET", "/cardById/$MATCHED_CARD.id/currentSide", "A"]
                ]
            ]
        ],
        "scenarioToB": [
            ["VAR", "$MATCHED_CARD", ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.currentFace.type", "Scenario"]]],
            ["COND",
                ["AND",
                    ["NOT_EQUAL", "$MATCHED_CARD", null],
                    ["EQUAL", "$MATCHED_CARD.currentSide", "A"]
                ],
                [
                    ["LOG", "{{$ALIAS_N}} flipped {{$MATCHED_CARD.sides.A.name}} to Hard/Expert side."],
                    ["SET", "/cardById/$MATCHED_CARD.id/currentSide", "B"]
                ]
            ]
        ],
        "locationsToB": [
            ["VAR", "$SELECTED_LOCATIONS", ["FILTER_CARDS", "$CARD", ["AND",
                ["EQUAL", "$CARD.sides.A.type", "Location"],
                ["EQUAL", "$CARD.sides.B.type", "Location"],
                ["EQUAL", "$CARD.currentSide", "A"],
                ["EQUAL", "$CARD.sides.B.clues", null],
                ["EQUAL", "$CARD.sides.B.shroud", null]
            ]]],
            ["FOR_EACH_VAL", "$SELECTED_LOCATION", "$SELECTED_LOCATIONS", [
                ["SET", "/cardById/$SELECTED_LOCATION.id/currentSide", "B"]
            ]]
        ],
        "listChaosTokens": [
            ["COUNT_ALL_CHAOS_TOKENS"],
            ["VAR", "$MESSAGE", ""],
            ["VAR", "$SEPARATOR", ": "],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_P1", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_P1}}x +1"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_P0", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_P0}}x 0"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M1", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M1}}x -1"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M2", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M2}}x -2"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M3", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M3}}x -3"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M4", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M4}}x -4"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M5", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M5}}x -5"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M6", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M6}}x -6"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M7", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M7}}x -7"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_M8", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_M8}}x -8"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_ELDER_THING", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_ELDER_THING}}x Elder Thing"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_CULTIST", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_CULTIST}}x Cultist"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_SKULL", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_SKULL}}x Skull"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_TABLET", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_TABLET}}x Tablet"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_BLESS", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_BLESS}}x Bless"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_CURSE", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_CURSE}}x Curse"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_FROST", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_FROST}}x Frost"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_AUTO_FAIL", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_AUTO_FAIL}}x Auto Fail"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["COND", ["GREATER_THAN", "$COUNT_CHAOS_TOKENS_RESULT_ELDER_SIGN", 0], [
                ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$COUNT_CHAOS_TOKENS_RESULT_ELDER_SIGN}}x Elder Sign"],
                ["UPDATE_VAR", "$SEPARATOR", ", "]
            ]],
            ["LOG", "{{$ALIAS_N}} checked Chaos Tokens{{$MESSAGE}}."]
        ],
        "addChaosTokens": [
            ["PROMPT", "$PLAYER_N", "addChaosTokens"]
        ],
        "removeChaosTokens": [
            ["PROMPT", "$PLAYER_N", "removeChaosTokens"]
        ],
        "attachDetachCard": [
            ["COND",
                ["GREATER_THAN", "$ACTIVE_CARD.cardIndex", 0],
                [
                    ["LOG", "{{$ALIAS_N}} detached {{$ACTIVE_FACE.name}} from {{$ACTIVE_CARD.parentCard.currentFace.name}}."],
                    ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.groupId", ["ADD", "$ACTIVE_CARD.stackIndex", 1], 0, {"allowFlip": false}]
                ],
                ["TRUE"],
                ["COND",
                    ["EQUAL", "$GAME.playerData.{{$PLAYER_N}}.cardToBeAttached", null],
                    [
                        ["LOG", "{{$ALIAS_N}} will attach {{$ACTIVE_FACE.name}}."],
                        ["SET", "/playerData/{{$PLAYER_N}}/cardToBeAttached", "$ACTIVE_CARD"],
                        ["SET", "/cardById/{{$ACTIVE_CARD_ID}}/borderColor", "LightSkyBlue"]
                    ],
                    ["TRUE"],
                    [
                        ["VAR", "$ATTACHED_CARD", "$GAME.playerData.{{$PLAYER_N}}.cardToBeAttached"],
                        ["COND",
                            ["EQUAL", "$ATTACHED_CARD.id", "$ACTIVE_CARD_ID"],
                            [
                                ["LOG", "{{$ALIAS_N}} will not attach {{$ATTACHED_CARD.currentFace.name}}."]
                            ],
                            ["TRUE"],
                            [
                                ["LOG", "{{$ALIAS_N}} attached {{$ATTACHED_CARD.currentFace.name}} to {{$ACTIVE_FACE.name}}."],
                                ["ATTACH_CARD", "$ATTACHED_CARD.id", "$ACTIVE_CARD_ID"],
                                ["COND",
                                    ["AND",
                                        ["EQUAL", "$ATTACHED_CARD.currentFace.type", "FirstInvestigatorToken"],
                                        ["EQUAL", "$ACTIVE_FACE.type", "Investigator"]
                                    ],
                                    ["COND",
                                        ["AND",
                                            ["EQUAL", "$ACTIVE_CARD.groupId", "player1Investigator"],
                                            ["NOT_EQUAL", "$GAME.firstPlayer", "player1"]
                                        ],
                                        [
                                            ["VAR", "$ALIAS_I", ["GET_ALIAS", "player1"]],
                                            ["LOG", "{{$ALIAS_N}} set {{$ALIAS_I}} as the lead investigator."],
                                            ["SET", "/firstPlayer", "player1"]
                                        ],
                                        ["AND",
                                            ["EQUAL", "$ACTIVE_CARD.groupId", "player2Investigator"],
                                            ["NOT_EQUAL", "$GAME.firstPlayer", "player2"]
                                        ],
                                        [
                                            ["VAR", "$ALIAS_I", ["GET_ALIAS", "player2"]],
                                            ["LOG", "{{$ALIAS_N}} set {{$ALIAS_I}} as the lead investigator."],
                                            ["SET", "/firstPlayer", "player2"]
                                        ],
                                        ["AND",
                                            ["EQUAL", "$ACTIVE_CARD.groupId", "player3Investigator"],
                                            ["NOT_EQUAL", "$GAME.firstPlayer", "player3"]
                                        ],
                                        [
                                            ["VAR", "$ALIAS_I", ["GET_ALIAS", "player3"]],
                                            ["LOG", "{{$ALIAS_N}} set {{$ALIAS_I}} as the lead investigator."],
                                            ["SET", "/firstPlayer", "player3"]
                                        ],
                                        ["AND",
                                            ["EQUAL", "$ACTIVE_CARD.groupId", "player4Investigator"],
                                            ["NOT_EQUAL", "$GAME.firstPlayer", "player4"]
                                        ],
                                        [
                                            ["VAR", "$ALIAS_I", ["GET_ALIAS", "player4"]],
                                            ["LOG", "{{$ALIAS_N}} set {{$ALIAS_I}} as the lead investigator."],
                                            ["SET", "/firstPlayer", "player4"]
                                        ]
                                    ]
                                ]
                            ]
                        ],
                        ["UNSET", "/playerData/{{$PLAYER_N}}/cardToBeAttached"],
                        ["UNSET", "/cardById/{{$ATTACHED_CARD.id}}/borderColor"]
                    ]
                ]
            ]            
        ],
        "toggleSideboard": [
            ["COND",
                ["NOT_EQUAL", "$PLAYER_DATA.$PLAYER_N.viewingSideboard", true],
                [
                    ["LOG", "{{$ALIAS_N}} is looking at Sideboard."],
                    ["SET", "/playerData/$PLAYER_N/viewingSideboard", true],
                    ["FOR_EACH_KEY_VAL", "$REGION_ID", "$REGION", "$GAME.layout.regions", [
                        ["COND",
                            ["EQUAL", "$REGION.layerIndex", 1],
                            ["SET", "/playerData/$PLAYER_N/layout/regions/$REGION_ID/visible", true]
                        ]
                    ]]
                ],
                ["TRUE"],
                [
                    ["LOG", "{{$ALIAS_N}} is no longer looking at Sideboard."],
                    ["SET", "/playerData/$PLAYER_N/viewingSideboard", false],
                    ["FOR_EACH_KEY_VAL", "$REGION_ID", "$REGION", "$GAME.layout.regions", [
                        ["COND",
                            ["EQUAL", "$REGION.layerIndex", 1],
                            ["SET", "/playerData/$PLAYER_N/layout/regions/$REGION_ID/visible", false]
                        ]
                    ]]
                ]
            ]
        ],
        "toggleVictoryDisplay": [
            ["TOGGLE_SIDEBOARD_GROUP", "sharedVictoryDisplay"]
        ],
        "toggleChaosBag": [
            ["TOGGLE_SIDEBOARD_GROUP", "sharedChaosBag"]
        ],
        "toggleNotInPlay": [
            ["TOGGLE_SIDEBOARD_GROUP", "sharedNotInPlay"]
        ],
        "toggleOffMap": [
            ["TOGGLE_SIDEBOARD_GROUP", "sharedOffMap"]
        ],
        "toggleTokens": [
            ["TOGGLE_SIDEBOARD_GROUP", "sharedTokens"]
        ],
        "increaseResources": [
            ["LOG", "{{$ALIAS_N}} increased {{$PLAYER_N}}'s Resources by 1."],
            ["INCREASE_VAL", "/playerData/$PLAYER_N/resources", 1]
        ],
        "decreaseResources": [
            ["COND",
                ["GREATER_THAN", "$GAME.playerData.$PLAYER_N.resources", 0],
                [
                    ["LOG", "{{$ALIAS_N}} decreased {{$PLAYER_N}}'s Resources by 1."],
                    ["DECREASE_VAL", "/playerData/$PLAYER_N/resources", 1]
                ],
                ["TRUE"],
                ["LOG", "{{$PLAYER_N}}'s Resources cannot be decreased, {{$ALIAS_N}}."]
            ]
        ]
    }
}