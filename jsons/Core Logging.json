{
    "functions": {
        "IS_VALID_PLAYER": {
            "args": ["$PLAYER"],
            "code": [
                ["OR",
                    ["EQUAL", "$PLAYER", "player1"],
                    ["EQUAL", "$PLAYER", "player2"],
                    ["EQUAL", "$PLAYER", "player3"],
                    ["EQUAL", "$PLAYER", "player4"]
                ]
            ]
        },
        "VALIDATE_NOT_NULL": {
            "args": ["$PARAM", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_NOT_EMPTY": {
            "args": ["$PARAM", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["EQUAL", "$PARAM", ""],
                    ["ABORT", "{{$DESCRIPTION}} is empty."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_EQUAL": {
            "args": ["$PARAM", "$VALUE", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["NOT_EQUAL", "$PARAM", "$VALUE"],
                    ["ABORT", "{{$DESCRIPTION}} is not equal {{$VALUE}}."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_PLAYER": {
            "args": ["$PARAM", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["EQUAL", "$PARAM", ""],
                    ["ABORT", "{{$DESCRIPTION}} is empty."],
                    ["AND",
                        ["NOT_EQUAL", "$PARAM", "player1"],
                        ["NOT_EQUAL", "$PARAM", "player2"],
                        ["NOT_EQUAL", "$PARAM", "player3"],
                        ["NOT_EQUAL", "$PARAM", "player4"]
                    ],
                    ["ABORT", "{{$DESCRIPTION}} is not a valid player id."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_BOOLEAN": {
            "args": ["$PARAM", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["AND",
                        ["NOT_EQUAL", "$PARAM", true],
                        ["NOT_EQUAL", "$PARAM", false]
                    ],
                    ["ABORT", "{{$DESCRIPTION}} is not a valid boolean."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_GT0": {
            "args": ["$PARAM", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["LESS_THAN", "$PARAM", 1],
                    ["ABORT", "{{$DESCRIPTION}} is less than 1."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_GE0": {
            "args": ["$PARAM", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["LESS_THAN", "$PARAM", 0],
                    ["ABORT", "{{$DESCRIPTION}} is less than 0."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_RANGE": {
            "args": ["$PARAM", "$MIN", "$MAX", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["LESS_THAN", "$PARAM", "$MIN"],
                    ["ABORT", "{{$DESCRIPTION}} is less than {{$MIN}}."],
                    ["GREATER_THAN", "$PARAM", "$MAX"],
                    ["ABORT", "{{$DESCRIPTION}} is greater than {{$MAX}}."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "VALIDATE_INDEX": {
            "args": ["$PARAM", "$DESCRIPTION"],
            "code": [
                ["COND",
                    ["EQUAL", "$PARAM", null],
                    ["ABORT", "{{$DESCRIPTION}} is null."],
                    ["LESS_THAN", "$PARAM", -1],
                    ["ABORT", "{{$DESCRIPTION}} is less than -1."],
                    ["TRUE"],
                    "$GAME"
                ]
            ]
        },
        "GET_CARD_AND_VALIDATE": {
            "args": ["$TARGET_CARD_ID", "$DESCRIPTION"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$TARGET_CARD_ID", "$DESCRIPTION"],
                ["VAR", "$TARGET_CARD", "$CARD_BY_ID.$TARGET_CARD_ID"],
                ["COND",
                    ["EQUAL", "$TARGET_CARD", null],
                    ["ABORT", "{{$DESCRIPTION}} is not a valid card id."],
                    ["TRUE"],
                    "$TARGET_CARD"
                ]
            ]
        },
        "GET_GROUP_AND_VALIDATE": {
            "args": ["$TARGET_GROUP_ID", "$DESCRIPTION"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$TARGET_GROUP_ID", "$DESCRIPTION"],
                ["VAR", "$TARGET_GROUP", "$GROUP_BY_ID.$TARGET_GROUP_ID"],
                ["COND",
                    ["EQUAL", "$TARGET_GROUP", null],
                    ["ABORT", "{{$DESCRIPTION}} is not a valid group id."],
                    ["TRUE"],
                    "$TARGET_GROUP"
                ]
            ]
        },
        "DO_LOG": {
            "args": ["$LOG_EVENT", "$ACTOR_PLAYER", "$TARGET_PLAYER", "$TEXT_WITH_ACTOR", "$TEXT_WITHOUT_ACTOR"],
            "code": [
                ["COND",
                    ["EQUAL", "$LOG_EVENT", true],
                    ["COND",
                        ["NOT_EQUAL", "$ACTOR_PLAYER", null],
                        ["COND",
                            ["EQUAL", "$ACTOR_PLAYER", "$TARGET_PLAYER"],
                            ["LOG", ["GET_ALIAS", "$TARGET_PLAYER"], " ", "$TEXT_WITHOUT_ACTOR"],
                            ["TRUE"],
                            ["LOG", ["GET_ALIAS", "$ACTOR_PLAYER"], " makes ", ["GET_ALIAS", "$TARGET_PLAYER"], " ", "$TEXT_WITH_ACTOR"]
                        ],
                        ["TRUE"],
                        ["LOG", "└── ", ["GET_ALIAS", "$TARGET_PLAYER"], " ", "$TEXT_WITHOUT_ACTOR"]
                    ]
                ]
            ]
        },
        "DO_LOG_SCN": {
            "args": ["$TARGET_PLAYER", "$TEXT_WITHOUT_ACTOR"],
            "code": [
                ["DO_LOG", true, null, "$TARGET_PLAYER", "dummy", "$TEXT_WITHOUT_ACTOR"]
            ]
        },
        "GET_NUMERIC_LOG": {
            "args": ["$PREFIX_SINGLE", "$PREFIX_MANY", "$NUMBER", "$SUFFIX_SINGLE", "$SUFFIX_MANY"],
            "code": [
                ["COND",
                    ["EQUAL", "$NUMBER", 1],
                    "{{$PREFIX_SINGLE}}{{$NUMBER}}{{$SUFFIX_SINGLE}}",
                    ["TRUE"],
                    "{{$PREFIX_MANY}}{{$NUMBER}}{{$SUFFIX_MANY}}"
                ]
            ]
        },
        "GET_FORMATTED_LIST": {
            "args":["$PREFIX", "$LIST", "$SUFFIX"],
            "code": [
                ["VAR", "$MESSAGE", ""],
                ["VAR", "$SEPARATOR", ""],
                ["FOR_EACH_VAL", "$ELEMENT", "$LIST", [
                    ["UPDATE_VAR", "$MESSAGE", "{{$MESSAGE}}{{$SEPARATOR}}{{$ELEMENT}}"],
                    ["UPDATE_VAR", "$SEPARATOR", ", "]
                ]],
                "{{$PREFIX}}{{$MESSAGE}}{{$SUFFIX}}"
            ]
        },
        "DO_FORMAT_STRING": {
            "args": ["$FORMAT_STRING", "$ARGS"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$FORMAT_STRING", "DO_FORMAT_STRING.FORMAT_STRING"],
                ["COND",
                    ["NOT_EQUAL", "$ARGS", null],
                    [
                        ["VAR", "$LEN", ["LENGTH", "$ARGS"]],
                        ["FOR_EACH_START_STOP_STEP", "$I", 0, "$LEN", 1, [
                            ["VAR", "$ARG", "$ARGS.[$I]"],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", "}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", "\\}"]], "{{$ARG}}"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":P}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":P\\}"]], ["GET_ALIAS", "$ARG"]]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":I}"]]],
                                [
                                    ["VAR", "$VAL", ""],
                                    ["VAR", "$MINI_INVESTIGATOR", ["GET_MINI_INVESTIGATOR", "$ARG"]],
                                    ["COND",
                                        ["NOT_EQUAL", "$MINI_INVESTIGATOR", null],
                                        ["UPDATE_VAR", "$VAL", "$MINI_INVESTIGATOR.sides.A.name"],
                                        ["TRUE"],
                                        [
                                            ["VAR", "$INVESTIGATOR", ["GET_INVESTIGATOR", "$ARG"]],
                                            ["COND",
                                                ["NOT_EQUAL", "$INVESTIGATOR", null],
                                                ["UPDATE_VAR", "$VAL", ["REGEX_REPLACE", "$INVESTIGATOR.sides.A.name", ":.+", ""]],
                                                ["TRUE"],
                                                ["UPDATE_VAR", "$VAL", ["JOIN_STRING", ["GET_ALIAS", "$ARG"], "'s investigator"]]
                                            ]
                                        ]
                                    ],
                                    ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":I\\}"]], "$VAL"]]
                                ]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":C}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":C\\}"]], "$ARG.currentFace.name"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":G}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":G\\}"]], "$ARG.label"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":S}"]]],
                                [
                                    ["VAR", "$VAL", "s"],
                                    ["COND",
                                        ["EQUAL", "$ARG", 1],
                                        ["UPDATE_VAR", "$VAL", ""]
                                    ],
                                    ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":S\\}"]], "$VAL"]]
                                ]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":CA}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":CA\\}"]], "$ARG.sides.A.name"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":CB}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":CB\\}"]], "$ARG.sides.B.name"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":CID}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":CID\\}"]], "$CARD_BY_ID.$ARG.currentFace.name"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":GID}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":GID\\}"]], "$GROUP_BY_ID.$ARG.label"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":CIDA}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":CIDA\\}"]], "$CARD_BY_ID.$ARG.sides.A.name"]]
                            ],
                            ["COND",
                                ["IN_STRING", "$FORMAT_STRING", ["JOIN_STRING", "{", ["JOIN_STRING", "{{$I}}", ":CIDB}"]]],
                                ["UPDATE_VAR", "$FORMAT_STRING", ["REGEX_REPLACE", "$FORMAT_STRING", ["JOIN_STRING", "\\{", ["JOIN_STRING", "{{$I}}", ":CIDB\\}"]], "$CARD_BY_ID.$ARG.sides.B.name"]]
                            ]
                        ]]
                    ]
                ],
                "$FORMAT_STRING"
            ]
        },
        "DO_FLOG": {
            "args": ["$FORMAT_STRING", "$ARGS"],
            "code": [
                ["LOG", ["DO_FORMAT_STRING", "$FORMAT_STRING", "$ARGS"]]
            ]
        },
        "DO_FSYSLOG": {
            "args": ["$FORMAT_STRING", "$ARGS"],
            "code": [
                ["LOG", "└── ", ["DO_FORMAT_STRING", "$FORMAT_STRING", "$ARGS"]]
            ]
        }
    }
}