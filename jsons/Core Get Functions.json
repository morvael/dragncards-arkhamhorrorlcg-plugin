{
    "functions": {
        "GET_CARD_LEFT": {
            "_comment": "Returns integer left coordinate of given card or its parent card (if attached).",
            "args": ["$TARGET_CARD_ID"],
            "code": [
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "GET_CARD_LEFT.TARGET_CARD_ID"]],
                ["COND",
                    ["NOT_EQUAL", "$TARGET_CARD", null],
                    [
                        ["VAR", "$TARGET_CARD_STACK_ID", ["GET_STACK_ID", "$TARGET_CARD.groupId", "$TARGET_CARD.stackIndex"]],
                        ["VAR", "$LEFT", "$STACK_BY_ID.$TARGET_CARD_STACK_ID.left"],
                        ["VAR", "$LEFT", ["SUBSTRING", "$LEFT", 0, ["SUBTRACT", ["LENGTH", "$LEFT"], 1]]],
                        ["CALC", "{{$LEFT}}"]
                    ],
                    ["TRUE"],
                    0
                ]
            ]
        },
        "GET_CARD_TOP": {
            "_comment": "Returns integer top coordinate of given card or its parent card (if attached).",
            "args": ["$TARGET_CARD_ID"],
            "code": [
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "GET_CARD_TOP.TARGET_CARD_ID"]],
                ["COND",
                    ["NOT_EQUAL", "$TARGET_CARD", null],
                    [
                        ["VAR", "$TARGET_CARD_STACK_ID", ["GET_STACK_ID", "$TARGET_CARD.groupId", "$TARGET_CARD.stackIndex"]],
                        ["VAR", "$TOP", "$STACK_BY_ID.$TARGET_CARD_STACK_ID.top"],
                        ["VAR", "$TOP", ["SUBSTRING", "$TOP", 0, ["SUBTRACT", ["LENGTH", "$TOP"], 1]]],
                        ["CALC", "{{$TOP}}"]
                    ],
                    ["TRUE"],
                    0
                ]
            ]
        },
        "GET_TOP_CARD": {
            "_comment": "Returns top card of given group, or null.",
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "GET_TOP_CARD.TARGET_GROUP_ID"]],
                ["GET_CARD", "$TARGET_GROUP.id", 0, 0]
            ]
        },
        "GET_CURRENT_AGENDA": {
            "_comment": "Returns top card of sharedAgendaStory, or null.",
            "args": [],
            "code": [
                ["GET_TOP_CARD", "sharedAgendaStory"]
            ]
        },
        "GET_CARD_BY_DATABASE_ID": {
            "_comment": "Returns a card given databaseId, or null.",
            "args": ["$DATABASE_ID"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$DATABASE_ID", "GET_CARD_BY_DATABASE_ID.DATABASE_ID"],
                ["ONE_CARD", "$CARD", ["EQUAL", "$CARD.currentFace.databaseId", "$DATABASE_ID"]]
            ]
        },
        "GET_NAMED_ENCOUNTER_DECK_CARD": {
            "_comment": "Returns a card from sharedEncounterDeck with given side A name, or null.",
            "args": ["$TARGET_NAME"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$TARGET_NAME", "GET_NAMED_ENCOUNTER_DECK_CARD.TARGET_NAME"],
                ["ONE_CARD", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "sharedEncounterDeck"],
                    ["OR",
                        ["EQUAL", "$CARD.sides.A.name", "$TARGET_NAME"],
                        ["IN_STRING", "$CARD.sides.A.name", "{{$TARGET_NAME}}:"],
                        ["EQUAL", "$CARD.id", "$TARGET_NAME"]
                    ]                    
                ]]
            ]
        },
        "GET_NAMED_MAP_LOCATION": {
            "_comment": "Returns Location type card from sharedLocations with given currentFace name, or null.",
            "args": ["$TARGET_NAME"],
            "code": [
                ["VALIDATE_NOT_EMPTY", "$TARGET_NAME", "GET_NAMED_MAP_LOCATION.TARGET_NAME"],
                ["ONE_CARD", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "sharedLocations"],
                    ["EQUAL", "$CARD.currentFace.type", "Location"],
                    ["OR",
                        ["EQUAL", "$CARD.currentFace.name", "$TARGET_NAME"],
                        ["IN_STRING", "$CARD.currentFace.name", "{{$TARGET_NAME}}:"],
                        ["EQUAL", "$CARD.id", "$TARGET_NAME"]
                    ]
                ]]
            ]
        },
        "GET_ALL_CARDS_IN_GROUP": {
            "_comment": "Returns list of all cards in given group.",
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "GET_ALL_CARDS_IN_GROUP.TARGET_GROUP_ID"]],
                ["FILTER_CARDS", "$CARD", ["EQUAL", "$CARD.groupId", "$TARGET_GROUP_ID"]]
            ]
        },
        "GET_ALL_CARDS_IN_GROUP_COUNT": {
            "_comment": "Returns integer count of all cards in given group.",
            "args": ["$TARGET_GROUP_ID"],
            "code": [
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "GET_ALL_CARDS_IN_GROUP_COUNT.TARGET_GROUP_ID"]],
                ["LENGTH", ["GET_ALL_CARDS_IN_GROUP", "$TARGET_GROUP_ID"]]
            ]
        },
        "GET_TARGETED_CARDS_IN_GROUP": {
            "_comment": "Returns list of cards in given group targeted by given player.",
            "args": ["$TARGET_GROUP_ID", "$TARGETING_PLAYER"],
            "code": [
                ["VAR", "$TARGET_GROUP", ["GET_GROUP_AND_VALIDATE", "$TARGET_GROUP_ID", "GET_TARGETED_CARDS_IN_GROUP.TARGET_GROUP_ID"]],
                ["VALIDATE_PLAYER", "$TARGETING_PLAYER", "GET_TARGETED_CARDS_IN_GROUP.TARGETING_PLAYER"],
                ["FILTER_CARDS", "$CARD", ["AND",
                    ["EQUAL", "$CARD.groupId", "$TARGET_GROUP_ID"],
                    ["EQUAL", "$CARD.targeting.$TARGETING_PLAYER", true]
                ]]
            ]
        },
        "GET_ALL_CARDS_IN_PLAY": {
            "_comment": "Returns list of all cards with inPlay true.",
            "args": [],
            "code": [
                ["FILTER_CARDS", "$CARD", ["EQUAL", "$CARD.inPlay", true]]
            ]
        },
        "DO_SET_CARD_LOCATION": {
            "_comment": "Sets percent coordinates of given card or its parent card (if attached).",
            "args": ["$TARGET_CARD_ID", "$LEFT", "$TOP"],
            "code": [
                ["VAR", "$TARGET_CARD", ["GET_CARD_AND_VALIDATE", "$TARGET_CARD_ID", "DO_SET_CARD_LOCATION.TARGET_CARD_ID"]],
                ["VALIDATE_NOT_NULL", "$LEFT", "DO_SET_CARD_LOCATION.LEFT"],
                ["VALIDATE_NOT_NULL", "$TOP", "DO_SET_CARD_LOCATION.TOP"],
                ["VAR", "$TARGET_CARD_STACK_ID", ["GET_STACK_ID", "$TARGET_CARD.groupId", "$TARGET_CARD.stackIndex"]],
                ["SET", "/stackById/$TARGET_CARD_STACK_ID/left", "{{$LEFT}}%"],
                ["SET", "/stackById/$TARGET_CARD_STACK_ID/top",  "{{$TOP}}%"]
            ]
        },
        "DO_CLEAR_TARGETED_FROM_LIST": {
            "_comment": "Unsets given player targeting cards from given list.",
            "args": ["$SELECTED_CARDS", "$TARGETING_PLAYER"],
            "code": [
                ["VALIDATE_NOT_NULL", "$SELECTED_CARDS", "DO_CLEAR_TARGETED_FROM_LIST.SELECTED_CARDS"],
                ["VALIDATE_PLAYER", "$TARGETING_PLAYER", "DO_CLEAR_TARGETED_FROM_LIST.TARGETING_PLAYER"],
                ["COND",
                    ["GREATER_THAN", ["LENGTH", "$SELECTED_CARDS"], 0],
                    ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                        ["UNSET", "/cardById/$CARD.id/targeting/$TARGETING_PLAYER"]
                    ]]
                ]
            ]
        },
        "GET_READY_ENEMIES_COUNT": {
            "_comment": "Returns integer count of all ready Enemy type cards in play (except those in sharedOffMap).",
            "args": [],
            "code": [
                ["VAR", "$ENEMIES", 0],
                ["VAR", "$SELECTED_CARDS", ["GET_ALL_CARDS_IN_PLAY"]],
                ["FOR_EACH_VAL", "$CARD", "$SELECTED_CARDS", [
                    ["COND",
                        ["AND",
                            ["EQUAL", "$CARD.currentFace.type", "Enemy"],
                            ["EQUAL", "$CARD.rotation", 0],
                            ["NOT_EQUAL", "$CARD.groupId", "sharedOffMap"]
                        ],
                        ["INCREASE_VAR", "$ENEMIES", 1]
                    ]
                ]],
                "$ENEMIES"
            ]
        },
        "GET_UNSAFE_ALLOWED": {
            "_comment": "Returns boolean blockUnsafeActions preference of given player (false when player is null).",
            "args": ["$ACTOR_PLAYER"],
            "code": [
                ["AND",
                    ["NOT_EQUAL", "$ACTOR_PLAYER", null],
                    ["EQUAL", "$GAME.playerData.$ACTOR_PLAYER.blockUnsafeActions", false]
                ]
            ]
        },
        "REMOVE_FIRST_FROM_LIST_BY_VALUE": {
            "_comment": "Returns boolean blockUnsafeActions preference of given player (false when player is null).",
            "args": ["$LIST", "$VALUE"],
            "code": [
                ["VAR", "$NEW_LIST", ["LIST"]],
                ["VAR", "$REMOVED", false],
                ["FOR_EACH_VAL", "$VAL", "$LIST", [
                    ["COND",
                        ["EQUAL", "$VAL", "$VALUE"],
                        ["COND",
                            ["EQUAL", "$REMOVED", false],
                            ["UPDATE_VAR", "$REMOVED", true],
                            ["TRUE"],
                            ["UPDATE_VAR", "$NEW_LIST", ["APPEND", "$NEW_LIST", "$VAL"]]
                        ],
                        ["TRUE"],
                        ["UPDATE_VAR", "$NEW_LIST", ["APPEND", "$NEW_LIST", "$VAL"]]
                    ]
                ]],
                "$NEW_LIST"
            ]
        }
    }
}